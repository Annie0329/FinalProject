// Generated by Haxe 4.2.1+bf9ff69
#include <hxcpp.h>

#ifndef INCLUDED_NPC
#include <NPC.h>
#endif
#ifndef INCLUDED_NpcType
#include <NpcType.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3e976c276e223615_45_new,"NPC","new",0x5aab8b33,"NPC.new","NPC.hx",45,0x6c511b9d)
static const int _hx_array_data_003b75c1_1[] = {
	(int)0,(int)1,(int)2,(int)3,(int)4,(int)5,
};
HX_LOCAL_STACK_FRAME(_hx_pos_3e976c276e223615_120_update,"NPC","update",0x7a361116,"NPC.update","NPC.hx",120,0x6c511b9d)

void NPC_obj::__construct(Float x,Float y, ::NpcType type){
            	HX_STACKFRAME(&_hx_pos_3e976c276e223615_45_new)
HXLINE(  46)		super::__construct(x,y,null());
HXLINE(  47)		this->type = type;
HXLINE(  49)		switch((int)(type->_hx_getIndex())){
            			case (int)0: {
HXLINE(  52)				this->loadGraphic(HX_("assets/images/doge.png",cf,6a,a6,92),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)1: {
HXLINE(  55)				this->loadGraphic(HX_("assets/images/sbWhite.png",0a,c4,38,d3),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)2: {
HXLINE(  57)				this->loadGraphic(HX_("assets/images/sbRed.png",32,71,4e,b6),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)3: {
HXLINE(  59)				this->loadGraphic(HX_("assets/images/sbBlue.png",ef,37,c0,a9),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)4: {
HXLINE(  61)				this->loadGraphic(HX_("assets/images/sbGreen.png",24,9d,05,69),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)5: {
HXLINE(  63)				this->loadGraphic(HX_("assets/images/sbBlack.png",20,92,df,c5),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)6: {
HXLINE(  65)				this->loadGraphic(HX_("assets/images/monument.png",2d,e3,e0,2c),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)7: {
HXLINE(  67)				this->makeGraphic(240,480,0,null(),null());
            			}
            			break;
            			case (int)8: {
HXLINE(  69)				this->loadGraphic(HX_("assets/images/saveStone.png",98,62,89,54),true,240,240,null(),null());
HXLINE(  70)				this->animation->add(HX_("shine",6b,f3,22,7c),::Array_obj< int >::fromData( _hx_array_data_003b75c1_1,6),6,true,null(),null());
            			}
            			break;
            			case (int)9: {
HXLINE(  72)				this->loadGraphic(HX_("assets/images/spartan.png",43,59,f1,2f),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)10: {
HXLINE(  74)				this->loadGraphic(HX_("assets/images/mineSign.png",d6,11,e3,8e),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)11: {
HXLINE(  77)				this->makeGraphic(120,240,0,null(),null());
            			}
            			break;
            			case (int)12: {
HXLINE(  79)				this->makeGraphic(120,240,0,null(),null());
            			}
            			break;
            			case (int)13: {
HXLINE(  81)				this->loadGraphic(HX_("assets/images/house1Sign.png",94,0e,87,9a),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)14: {
HXLINE(  83)				this->loadGraphic(HX_("assets/images/p1.png",67,dd,28,62),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)15: {
HXLINE(  85)				this->loadGraphic(HX_("assets/images/mathChart.png",a6,bf,f8,09),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)16: {
HXLINE(  87)				this->loadGraphic(HX_("assets/images/p1BaToCoMach.png",86,18,b8,4e),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)17: {
HXLINE(  89)				this->loadGraphic(HX_("assets/images/p1CoToApMach.png",36,c2,48,34),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)18: {
HXLINE(  91)				this->loadGraphic(HX_("assets/images/p1ApToCoMach.png",b6,1f,52,a2),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)19: {
HXLINE(  93)				this->loadGraphic(HX_("assets/images/p1CoToDeMach.png",c8,a6,c8,64),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)20: {
HXLINE(  95)				this->loadGraphic(HX_("assets/images/p1DeToCoMach.png",48,b5,14,eb),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)21: {
HXLINE(  98)				this->loadGraphic(HX_("assets/images/house2Sign.png",95,77,78,6d),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)22: {
HXLINE( 100)				this->loadGraphic(HX_("assets/images/p2.png",e8,71,8f,f5),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)23: {
HXLINE( 102)				this->loadGraphic(HX_("assets/images/p2Mach.png",01,2c,23,0f),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)24: {
HXLINE( 104)				this->loadGraphic(HX_("assets/images/house3Sign.png",96,e0,69,40),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)25: {
HXLINE( 108)				this->loadGraphic(HX_("assets/images/p3.png",69,06,f6,88),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)26: {
HXLINE( 106)				this->loadGraphic(HX_("assets/images/p3Mach.png",02,95,14,e2),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)27: {
HXLINE( 110)				this->loadGraphic(HX_("assets/images/dexNews.png",fa,2d,67,85),null(),null(),null(),null(),null());
            			}
            			break;
            			case (int)28: {
HXLINE( 112)				this->loadGraphic(HX_("assets/images/house4Sign.png",97,49,5b,13),null(),null(),null(),null(),null());
            			}
            			break;
            		}
HXLINE( 115)		this->set_immovable(true);
            	}

Dynamic NPC_obj::__CreateEmpty() { return new NPC_obj; }

void *NPC_obj::_hx_vtable = 0;

Dynamic NPC_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< NPC_obj > _hx_result = new NPC_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool NPC_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x7ccf8994) {
		if (inClassId<=(int)0x2c01639b) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x2c01639b;
		} else {
			return inClassId==(int)0x7ccf8994;
		}
	} else {
		return inClassId==(int)0x7dab0655 || inClassId==(int)0x7edfba55;
	}
}

void NPC_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_3e976c276e223615_120_update)
HXLINE( 121)		if (::hx::IsPointerEq( this->type,::NpcType_obj::saveStone_dyn() )) {
HXLINE( 122)			this->animation->play(HX_("shine",6b,f3,22,7c),null(),null(),null());
            		}
HXLINE( 123)		this->super::update(elapsed);
            	}



::hx::ObjectPtr< NPC_obj > NPC_obj::__new(Float x,Float y, ::NpcType type) {
	::hx::ObjectPtr< NPC_obj > __this = new NPC_obj();
	__this->__construct(x,y,type);
	return __this;
}

::hx::ObjectPtr< NPC_obj > NPC_obj::__alloc(::hx::Ctx *_hx_ctx,Float x,Float y, ::NpcType type) {
	NPC_obj *__this = (NPC_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(NPC_obj), true, "NPC"));
	*(void **)__this = NPC_obj::_hx_vtable;
	__this->__construct(x,y,type);
	return __this;
}

NPC_obj::NPC_obj()
{
}

void NPC_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(NPC);
	HX_MARK_MEMBER_NAME(type,"type");
	 ::flixel::FlxSprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void NPC_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(type,"type");
	 ::flixel::FlxSprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val NPC_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"type") ) { return ::hx::Val( type ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val NPC_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"type") ) { type=inValue.Cast<  ::NpcType >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void NPC_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("type",ba,f2,08,4d));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo NPC_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::NpcType */ ,(int)offsetof(NPC_obj,type),HX_("type",ba,f2,08,4d)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *NPC_obj_sStaticStorageInfo = 0;
#endif

static ::String NPC_obj_sMemberFields[] = {
	HX_("type",ba,f2,08,4d),
	HX_("update",09,86,05,87),
	::String(null()) };

::hx::Class NPC_obj::__mClass;

void NPC_obj::__register()
{
	NPC_obj _hx_dummy;
	NPC_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("NPC",c1,75,3b,00);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(NPC_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< NPC_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = NPC_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = NPC_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

