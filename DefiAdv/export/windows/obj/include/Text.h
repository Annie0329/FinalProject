// Generated by Haxe 4.2.1+bf9ff69
#ifndef INCLUDED_Text
#define INCLUDED_Text

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_addons_text_FlxTypeText
#include <flixel/addons/text/FlxTypeText.h>
#endif
HX_DECLARE_CLASS0(Text)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS3(flixel,addons,text,FlxTypeText)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES Text_obj : public  ::flixel::addons::text::FlxTypeText_obj
{
	public:
		typedef  ::flixel::addons::text::FlxTypeText_obj super;
		typedef Text_obj OBJ_;
		Text_obj();

	public:
		enum { _hx_ClassId = 0x0c25eef1 };

		void __construct(Float X,Float Y,int Width,::String Text,int Size,bool EmbeddedFont);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Text")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"Text"); }
		static ::hx::ObjectPtr< Text_obj > __new(Float X,Float Y,int Width,::String Text,int Size,bool EmbeddedFont);
		static ::hx::ObjectPtr< Text_obj > __alloc(::hx::Ctx *_hx_ctx,Float X,Float Y,int Width,::String Text,int Size,bool EmbeddedFont);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Text_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Text",cd,f8,d2,37); }

		int i;
		::Array< ::String > dilog_boxes;
		bool txt;
		bool textRunDone;
		bool over;
		void show(::String name,bool txt);
		::Dynamic show_dyn();

		void update(Float elapsed);

		void updateEnter();
		::Dynamic updateEnter_dyn();

};


#endif /* INCLUDED_Text */ 
