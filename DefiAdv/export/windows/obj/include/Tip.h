// Generated by Haxe 4.2.1+bf9ff69
#ifndef INCLUDED_Tip
#define INCLUDED_Tip

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
HX_DECLARE_CLASS0(MissionText)
HX_DECLARE_CLASS0(Tip)
HX_DECLARE_CLASS0(TipText)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS3(flixel,addons,text,FlxTypeText)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,util,FlxTimer)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES Tip_obj : public  ::flixel::group::FlxTypedGroup_obj
{
	public:
		typedef  ::flixel::group::FlxTypedGroup_obj super;
		typedef Tip_obj OBJ_;
		Tip_obj();

	public:
		enum { _hx_ClassId = 0x7ee45dcf };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Tip")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"Tip"); }
		static ::hx::ObjectPtr< Tip_obj > __new();
		static ::hx::ObjectPtr< Tip_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Tip_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Tip",3b,19,40,00); }

		 ::flixel::FlxSprite background;
		 ::flixel::text::FlxText missionText;
		 ::flixel::addons::text::FlxTypeText tipText;
		int i;
		::String j;
		::String k;
		::Array< ::String > tip_boxes;
		::Array< ::String > mis_boxes;
		 ::flixel::util::FlxTimer tipTimer;
		void tipGetText( ::TipText title);
		::Dynamic tipGetText_dyn();

		void missionGetText( ::MissionText title);
		::Dynamic missionGetText_dyn();

		void update(Float elapsed);

};


#endif /* INCLUDED_Tip */ 
