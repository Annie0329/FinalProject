// Generated by Haxe 4.2.1+bf9ff69
#ifndef INCLUDED_TipText
#define INCLUDED_TipText

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(TipText)


class TipText_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef TipText_obj OBJ_;

	public:
		TipText_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("TipText",88,cb,37,55); }
		::String __ToString() const { return HX_("TipText.",a6,4b,9a,3b) + _hx_tag; }

		static ::TipText cloudMiner;
		static inline ::TipText cloudMiner_dyn() { return cloudMiner; }
		static ::TipText fraud;
		static inline ::TipText fraud_dyn() { return fraud; }
		static ::TipText loan;
		static inline ::TipText loan_dyn() { return loan; }
		static ::TipText miner;
		static inline ::TipText miner_dyn() { return miner; }
		static ::TipText minerSign;
		static inline ::TipText minerSign_dyn() { return minerSign; }
		static ::TipText monuFin;
		static inline ::TipText monuFin_dyn() { return monuFin; }
		static ::TipText nft;
		static inline ::TipText nft_dyn() { return nft; }
		static ::TipText nftNews;
		static inline ::TipText nftNews_dyn() { return nftNews; }
		static ::TipText noFraud;
		static inline ::TipText noFraud_dyn() { return noFraud; }
		static ::TipText sellLeaves;
		static inline ::TipText sellLeaves_dyn() { return sellLeaves; }
		static ::TipText shiba;
		static inline ::TipText shiba_dyn() { return shiba; }
		static ::TipText shibaNews;
		static inline ::TipText shibaNews_dyn() { return shibaNews; }
		static ::TipText streetSign;
		static inline ::TipText streetSign_dyn() { return streetSign; }
};


#endif /* INCLUDED_TipText */ 
