// Generated by Haxe 4.2.1+bf9ff69
#include <hxcpp.h>

#ifndef INCLUDED_TipText
#include <TipText.h>
#endif

::TipText TipText_obj::cloudMiner;

::TipText TipText_obj::fraud;

::TipText TipText_obj::loan;

::TipText TipText_obj::miner;

::TipText TipText_obj::minerSign;

::TipText TipText_obj::monuFin;

::TipText TipText_obj::nft;

::TipText TipText_obj::nftNews;

::TipText TipText_obj::noFraud;

::TipText TipText_obj::sellLeaves;

::TipText TipText_obj::shiba;

::TipText TipText_obj::shibaNews;

::TipText TipText_obj::streetSign;

bool TipText_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("cloudMiner",ca,60,19,c0)) { outValue = TipText_obj::cloudMiner; return true; }
	if (inName==HX_("fraud",24,7f,83,06)) { outValue = TipText_obj::fraud; return true; }
	if (inName==HX_("loan",30,9a,b7,47)) { outValue = TipText_obj::loan; return true; }
	if (inName==HX_("miner",7f,72,68,08)) { outValue = TipText_obj::miner; return true; }
	if (inName==HX_("minerSign",5c,da,99,61)) { outValue = TipText_obj::minerSign; return true; }
	if (inName==HX_("monuFin",22,dd,df,b9)) { outValue = TipText_obj::monuFin; return true; }
	if (inName==HX_("nft",3c,d1,53,00)) { outValue = TipText_obj::nft; return true; }
	if (inName==HX_("nftNews",6f,cf,f6,a4)) { outValue = TipText_obj::nftNews; return true; }
	if (inName==HX_("noFraud",23,03,87,d9)) { outValue = TipText_obj::noFraud; return true; }
	if (inName==HX_("sellLeaves",ce,1c,18,12)) { outValue = TipText_obj::sellLeaves; return true; }
	if (inName==HX_("shiba",f3,e8,22,7c)) { outValue = TipText_obj::shiba; return true; }
	if (inName==HX_("shibaNews",a6,8e,f1,49)) { outValue = TipText_obj::shibaNews; return true; }
	if (inName==HX_("streetSign",e0,91,f9,3a)) { outValue = TipText_obj::streetSign; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(TipText_obj)

int TipText_obj::__FindIndex(::String inName)
{
	if (inName==HX_("cloudMiner",ca,60,19,c0)) return 2;
	if (inName==HX_("fraud",24,7f,83,06)) return 5;
	if (inName==HX_("loan",30,9a,b7,47)) return 12;
	if (inName==HX_("miner",7f,72,68,08)) return 9;
	if (inName==HX_("minerSign",5c,da,99,61)) return 10;
	if (inName==HX_("monuFin",22,dd,df,b9)) return 1;
	if (inName==HX_("nft",3c,d1,53,00)) return 3;
	if (inName==HX_("nftNews",6f,cf,f6,a4)) return 8;
	if (inName==HX_("noFraud",23,03,87,d9)) return 6;
	if (inName==HX_("sellLeaves",ce,1c,18,12)) return 0;
	if (inName==HX_("shiba",f3,e8,22,7c)) return 4;
	if (inName==HX_("shibaNews",a6,8e,f1,49)) return 7;
	if (inName==HX_("streetSign",e0,91,f9,3a)) return 11;
	return super::__FindIndex(inName);
}

int TipText_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("cloudMiner",ca,60,19,c0)) return 0;
	if (inName==HX_("fraud",24,7f,83,06)) return 0;
	if (inName==HX_("loan",30,9a,b7,47)) return 0;
	if (inName==HX_("miner",7f,72,68,08)) return 0;
	if (inName==HX_("minerSign",5c,da,99,61)) return 0;
	if (inName==HX_("monuFin",22,dd,df,b9)) return 0;
	if (inName==HX_("nft",3c,d1,53,00)) return 0;
	if (inName==HX_("nftNews",6f,cf,f6,a4)) return 0;
	if (inName==HX_("noFraud",23,03,87,d9)) return 0;
	if (inName==HX_("sellLeaves",ce,1c,18,12)) return 0;
	if (inName==HX_("shiba",f3,e8,22,7c)) return 0;
	if (inName==HX_("shibaNews",a6,8e,f1,49)) return 0;
	if (inName==HX_("streetSign",e0,91,f9,3a)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val TipText_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("cloudMiner",ca,60,19,c0)) return cloudMiner;
	if (inName==HX_("fraud",24,7f,83,06)) return fraud;
	if (inName==HX_("loan",30,9a,b7,47)) return loan;
	if (inName==HX_("miner",7f,72,68,08)) return miner;
	if (inName==HX_("minerSign",5c,da,99,61)) return minerSign;
	if (inName==HX_("monuFin",22,dd,df,b9)) return monuFin;
	if (inName==HX_("nft",3c,d1,53,00)) return nft;
	if (inName==HX_("nftNews",6f,cf,f6,a4)) return nftNews;
	if (inName==HX_("noFraud",23,03,87,d9)) return noFraud;
	if (inName==HX_("sellLeaves",ce,1c,18,12)) return sellLeaves;
	if (inName==HX_("shiba",f3,e8,22,7c)) return shiba;
	if (inName==HX_("shibaNews",a6,8e,f1,49)) return shibaNews;
	if (inName==HX_("streetSign",e0,91,f9,3a)) return streetSign;
	return super::__Field(inName,inCallProp);
}

static ::String TipText_obj_sStaticFields[] = {
	HX_("sellLeaves",ce,1c,18,12),
	HX_("monuFin",22,dd,df,b9),
	HX_("cloudMiner",ca,60,19,c0),
	HX_("nft",3c,d1,53,00),
	HX_("shiba",f3,e8,22,7c),
	HX_("fraud",24,7f,83,06),
	HX_("noFraud",23,03,87,d9),
	HX_("shibaNews",a6,8e,f1,49),
	HX_("nftNews",6f,cf,f6,a4),
	HX_("miner",7f,72,68,08),
	HX_("minerSign",5c,da,99,61),
	HX_("streetSign",e0,91,f9,3a),
	HX_("loan",30,9a,b7,47),
	::String(null())
};

::hx::Class TipText_obj::__mClass;

Dynamic __Create_TipText_obj() { return new TipText_obj; }

void TipText_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("TipText",88,cb,37,55), ::hx::TCanCast< TipText_obj >,TipText_obj_sStaticFields,0,
	&__Create_TipText_obj, &__Create,
	&super::__SGetClass(), &CreateTipText_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &TipText_obj::__GetStatic;
}

void TipText_obj::__boot()
{
cloudMiner = ::hx::CreateConstEnum< TipText_obj >(HX_("cloudMiner",ca,60,19,c0),2);
fraud = ::hx::CreateConstEnum< TipText_obj >(HX_("fraud",24,7f,83,06),5);
loan = ::hx::CreateConstEnum< TipText_obj >(HX_("loan",30,9a,b7,47),12);
miner = ::hx::CreateConstEnum< TipText_obj >(HX_("miner",7f,72,68,08),9);
minerSign = ::hx::CreateConstEnum< TipText_obj >(HX_("minerSign",5c,da,99,61),10);
monuFin = ::hx::CreateConstEnum< TipText_obj >(HX_("monuFin",22,dd,df,b9),1);
nft = ::hx::CreateConstEnum< TipText_obj >(HX_("nft",3c,d1,53,00),3);
nftNews = ::hx::CreateConstEnum< TipText_obj >(HX_("nftNews",6f,cf,f6,a4),8);
noFraud = ::hx::CreateConstEnum< TipText_obj >(HX_("noFraud",23,03,87,d9),6);
sellLeaves = ::hx::CreateConstEnum< TipText_obj >(HX_("sellLeaves",ce,1c,18,12),0);
shiba = ::hx::CreateConstEnum< TipText_obj >(HX_("shiba",f3,e8,22,7c),4);
shibaNews = ::hx::CreateConstEnum< TipText_obj >(HX_("shibaNews",a6,8e,f1,49),7);
streetSign = ::hx::CreateConstEnum< TipText_obj >(HX_("streetSign",e0,91,f9,3a),11);
}


