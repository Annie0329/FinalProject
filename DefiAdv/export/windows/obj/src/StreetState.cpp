// Generated by Haxe 4.2.1+bf9ff69
#include <hxcpp.h>

#ifndef INCLUDED_Bag
#include <Bag.h>
#endif
#ifndef INCLUDED_CombatHUD
#include <CombatHUD.h>
#endif
#ifndef INCLUDED_Dia
#include <Dia.h>
#endif
#ifndef INCLUDED_Enemy
#include <Enemy.h>
#endif
#ifndef INCLUDED_EnemyType
#include <EnemyType.h>
#endif
#ifndef INCLUDED_MenuState
#include <MenuState.h>
#endif
#ifndef INCLUDED_MinerState
#include <MinerState.h>
#endif
#ifndef INCLUDED_MissionText
#include <MissionText.h>
#endif
#ifndef INCLUDED_NPC
#include <NPC.h>
#endif
#ifndef INCLUDED_NpcType
#include <NpcType.h>
#endif
#ifndef INCLUDED_Outcome
#include <Outcome.h>
#endif
#ifndef INCLUDED_Player
#include <Player.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StreetState
#include <StreetState.h>
#endif
#ifndef INCLUDED_Tip
#include <Tip.h>
#endif
#ifndef INCLUDED_TipText
#include <TipText.h>
#endif
#ifndef INCLUDED_WinState
#include <WinState.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxCamera
#include <flixel/FlxCamera.h>
#endif
#ifndef INCLUDED_flixel_FlxCameraFollowStyle
#include <flixel/FlxCameraFollowStyle.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxGame
#include <flixel/FlxGame.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_addons_editors_ogmo_FlxOgmo3Loader
#include <flixel/addons/editors/ogmo/FlxOgmo3Loader.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_input_FlxKeyManager
#include <flixel/input/FlxKeyManager.h>
#endif
#ifndef INCLUDED_flixel_input_FlxPointer
#include <flixel/input/FlxPointer.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInputManager
#include <flixel/input/IFlxInputManager.h>
#endif
#ifndef INCLUDED_flixel_input_keyboard_FlxKeyboard
#include <flixel/input/keyboard/FlxKeyboard.h>
#endif
#ifndef INCLUDED_flixel_input_mouse_FlxMouse
#include <flixel/input/mouse/FlxMouse.h>
#endif
#ifndef INCLUDED_flixel_math_FlxMath
#include <flixel/math/FlxMath.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_system_FlxSound
#include <flixel/system/FlxSound.h>
#endif
#ifndef INCLUDED_flixel_system_FlxSoundGroup
#include <flixel/system/FlxSoundGroup.h>
#endif
#ifndef INCLUDED_flixel_system_frontEnds_SoundFrontEnd
#include <flixel/system/frontEnds/SoundFrontEnd.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_tile_FlxBaseTilemap
#include <flixel/tile/FlxBaseTilemap.h>
#endif
#ifndef INCLUDED_flixel_tile_FlxTilemap
#include <flixel/tile/FlxTilemap.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxTween
#include <flixel/tweens/FlxTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_VarTween
#include <flixel/tweens/misc/VarTween.h>
#endif
#ifndef INCLUDED_flixel_util_FlxSave
#include <flixel/util/FlxSave.h>
#endif
#ifndef INCLUDED_flixel_util_FlxTimer
#include <flixel/util/FlxTimer.h>
#endif
#ifndef INCLUDED_flixel_util_FlxTimerManager
#include <flixel/util/FlxTimerManager.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_19_new,"StreetState","new",0x36382ae0,"StreetState.new","StreetState.hx",19,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_86_create,"StreetState","create",0xde7a9c7c,"StreetState.create","StreetState.hx",86,0x8442d090)
static const int _hx_array_data_4ad97aee_2[] = {
	(int)0,(int)1,(int)2,(int)3,
};
static const int _hx_array_data_4ad97aee_3[] = {
	(int)0,(int)1,(int)2,(int)3,
};
static const int _hx_array_data_4ad97aee_4[] = {
	(int)1,(int)2,(int)3,(int)4,(int)5,
};
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_237_placeEntities,"StreetState","placeEntities",0xb36060a8,"StreetState.placeEntities","StreetState.hx",237,0x8442d090)
static const int _hx_array_data_4ad97aee_7[] = {
	(int)0,(int)1,(int)2,(int)3,
};
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_333_saveFile,"StreetState","saveFile",0x3338fdd9,"StreetState.saveFile","StreetState.hx",333,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_362_loadFile,"StreetState","loadFile",0xf01f3542,"StreetState.loadFile","StreetState.hx",362,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_426_update,"StreetState","update",0xe970bb89,"StreetState.update","StreetState.hx",426,0x8442d090)
static const int _hx_array_data_4ad97aee_11[] = {
	(int)69,
};
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_456_update,"StreetState","update",0xe970bb89,"StreetState.update","StreetState.hx",456,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_496_npcTalk,"StreetState","npcTalk",0x9a105e2d,"StreetState.npcTalk","StreetState.hx",496,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_506_goToMiner,"StreetState","goToMiner",0x5d9ddc3c,"StreetState.goToMiner","StreetState.hx",506,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_503_goToMiner,"StreetState","goToMiner",0x5d9ddc3c,"StreetState.goToMiner","StreetState.hx",503,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_515_goHome,"StreetState","goHome",0xaa93b9e7,"StreetState.goHome","StreetState.hx",515,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_536_houseIn,"StreetState","houseIn",0xabeb3225,"StreetState.houseIn","StreetState.hx",536,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_534_houseIn,"StreetState","houseIn",0xabeb3225,"StreetState.houseIn","StreetState.hx",534,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_567_houseOut,"StreetState","houseOut",0xc1e5424e,"StreetState.houseOut","StreetState.hx",567,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_580_houseOut,"StreetState","houseOut",0xc1e5424e,"StreetState.houseOut","StreetState.hx",580,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_565_houseOut,"StreetState","houseOut",0xc1e5424e,"StreetState.houseOut","StreetState.hx",565,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_591_playerTouchEnemy,"StreetState","playerTouchEnemy",0xa0c55e4a,"StreetState.playerTouchEnemy","StreetState.hx",591,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_623_updateInCombat,"StreetState","updateInCombat",0x3dab02a2,"StreetState.updateInCombat","StreetState.hx",623,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_651_airdropMoney,"StreetState","airdropMoney",0xf5002547,"StreetState.airdropMoney","StreetState.hx",651,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_667_shopOpen,"StreetState","shopOpen",0xe5304d60,"StreetState.shopOpen","StreetState.hx",667,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_665_shopOpen,"StreetState","shopOpen",0xe5304d60,"StreetState.shopOpen","StreetState.hx",665,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_675_updateTalking,"StreetState","updateTalking",0x7de536ad,"StreetState.updateTalking","StreetState.hx",675,0x8442d090)
static const int _hx_array_data_4ad97aee_28[] = {
	(int)13,(int)32,
};
static const int _hx_array_data_4ad97aee_29[] = {
	(int)65,(int)83,(int)87,(int)68,(int)38,(int)40,(int)37,(int)39,
};
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_713_updateWhenDiaInvisible,"StreetState","updateWhenDiaInvisible",0x82f3c9d4,"StreetState.updateWhenDiaInvisible","StreetState.hx",713,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_734_updateWhenDiaInvisible,"StreetState","updateWhenDiaInvisible",0x82f3c9d4,"StreetState.updateWhenDiaInvisible","StreetState.hx",734,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_770_updateWhenDiaInvisible,"StreetState","updateWhenDiaInvisible",0x82f3c9d4,"StreetState.updateWhenDiaInvisible","StreetState.hx",770,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_790_playerUpDown,"StreetState","playerUpDown",0xaed7481e,"StreetState.playerUpDown","StreetState.hx",790,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_798_updateF4,"StreetState","updateF4",0xb3bdacf7,"StreetState.updateF4","StreetState.hx",798,0x8442d090)
static const int _hx_array_data_4ad97aee_35[] = {
	(int)115,
};
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_805_updateF4,"StreetState","updateF4",0xb3bdacf7,"StreetState.updateF4","StreetState.hx",805,0x8442d090)
HX_LOCAL_STACK_FRAME(_hx_pos_d01dfbdfb66e0ded_812_updateC,"StreetState","updateC",0x59335c9a,"StreetState.updateC","StreetState.hx",812,0x8442d090)
static const int _hx_array_data_4ad97aee_38[] = {
	(int)67,
};

void StreetState_obj::__construct( ::Dynamic MaxSize){
            	HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_19_new)
HXLINE(  82)		this->firstLoan = false;
HXLINE(  76)		this->p3Talk = false;
HXLINE(  75)		this->p2Talk = false;
HXLINE(  74)		this->p1Talk = false;
HXLINE(  72)		this->houseDis = 0;
HXLINE(  61)		this->sea = null();
HXLINE(  45)		this->enemyFlicker = false;
HXLINE(  43)		this->inCombat = false;
HXLINE(  39)		this->talkYes = false;
HXLINE(  38)		this->txt = true;
HXLINE(  25)		this->getDaMis = false;
HXLINE(  19)		super::__construct(MaxSize);
            	}

Dynamic StreetState_obj::__CreateEmpty() { return new StreetState_obj; }

void *StreetState_obj::_hx_vtable = 0;

Dynamic StreetState_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< StreetState_obj > _hx_result = new StreetState_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool StreetState_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x62817b24) {
		if (inClassId<=(int)0x0989514a) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x0989514a;
		} else {
			return inClassId==(int)0x62817b24;
		}
	} else {
		return inClassId==(int)0x7c795c9f || inClassId==(int)0x7ccf8994;
	}
}

void StreetState_obj::create(){
            	HX_GC_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_86_create)
HXLINE(  87)		this->map =  ::flixel::addons::editors::ogmo::FlxOgmo3Loader_obj::__alloc( HX_CTX ,HX_("assets/data/deFiMap.ogmo",49,bf,cf,04),HX_("assets/data/streetMap.json",16,73,e4,27));
HXLINE(  90)		this->cancel = ::flixel::FlxG_obj::sound->load(HX_("assets/sound/cancel.ogg",27,62,c6,8f),null(),null(),null(),null(),null(),null(),null(),null());
HXLINE(  91)		this->touchEnemy = ::flixel::FlxG_obj::sound->load(HX_("assets/sound/touchEnemy.ogg",36,b4,7a,db),null(),null(),null(),null(),null(),null(),null(),null());
HXLINE(  92)		this->openBag = ::flixel::FlxG_obj::sound->load(HX_("assets/sound/openBag.ogg",b3,d3,d1,28),null(),null(),null(),null(),null(),null(),null(),null());
HXLINE(  93)		this->doorTele = ::flixel::FlxG_obj::sound->load(HX_("assets/sound/doorTele.ogg",65,65,21,35),null(),null(),null(),null(),null(),null(),null(),null());
HXLINE(  94)		this->saveNoise = ::flixel::FlxG_obj::sound->load(HX_("assets/sound/save.ogg",6a,12,2d,60),null(),null(),null(),null(),null(),null(),null(),null());
HXLINE(  97)		this->ground = this->map->loadTilemap(HX_("assets/images/mtSmall.png",50,bb,bc,ad),HX_("ground",87,22,28,1c),null());
HXLINE(  98)		this->ground->follow(null(),null(),null());
HXLINE(  99)		this->add(this->ground);
HXLINE( 102)		this->road = this->map->loadTilemap(HX_("assets/images/mtSmall.png",50,bb,bc,ad),HX_("road",e0,e1,ae,4b),null());
HXLINE( 103)		this->road->follow(null(),null(),null());
HXLINE( 104)		this->add(this->road);
HXLINE( 107)		this->walls = this->map->loadTilemap(HX_("assets/images/mtSmall.png",50,bb,bc,ad),HX_("wall",0a,5d,f2,4e),null());
HXLINE( 108)		this->walls->follow(null(),null(),null());
HXLINE( 109)		this->add(this->walls);
HXLINE( 111)		this->sea =  ::flixel::group::FlxTypedGroup_obj::__alloc( HX_CTX ,null());
HXLINE( 112)		this->add(this->sea);
HXLINE( 115)		this->minerDoor =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,null(),null(),null())->loadGraphic(HX_("assets/images/minerDoor.png",bd,bc,65,6d),true,360,480,null(),null());
HXLINE( 116)		this->minerDoor->animation->add(HX_("glow",8d,4e,67,44),::Array_obj< int >::fromData( _hx_array_data_4ad97aee_2,4),3,true,null(),null());
HXLINE( 117)		this->minerDoor->setSize(( (Float)(360) ),( (Float)(120) ));
HXLINE( 118)		this->minerDoor->offset->set(0,360);
HXLINE( 119)		this->minerDoor->set_immovable(true);
HXLINE( 120)		this->add(this->minerDoor);
HXLINE( 121)		this->minerDoor->animation->play(HX_("glow",8d,4e,67,44),null(),null(),null());
HXLINE( 124)		this->homeDoor =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,null(),null(),null())->loadGraphic(HX_("assets/images/homeDoor.png",13,47,13,ab),true,432,480,null(),null());
HXLINE( 125)		this->homeDoor->animation->add(HX_("glow",8d,4e,67,44),::Array_obj< int >::fromData( _hx_array_data_4ad97aee_3,4),3,true,null(),null());
HXLINE( 126)		this->homeDoor->setSize(( (Float)(432) ),( (Float)(180) ));
HXLINE( 127)		this->homeDoor->offset->set(0,300);
HXLINE( 128)		this->homeDoor->set_immovable(true);
HXLINE( 129)		this->add(this->homeDoor);
HXLINE( 130)		this->homeDoor->animation->play(HX_("glow",8d,4e,67,44),null(),null(),null());
HXLINE( 133)		this->house1 =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,null(),null(),null())->makeGraphic(240,240,0,null(),null());
HXLINE( 134)		this->house1->set_immovable(true);
HXLINE( 135)		this->add(this->house1);
HXLINE( 137)		this->house1Door =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,null(),null(),null())->makeGraphic(240,240,0,null(),null());
HXLINE( 138)		this->house1Door->set_immovable(true);
HXLINE( 139)		this->add(this->house1Door);
HXLINE( 141)		this->house2 =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,null(),null(),null())->makeGraphic(240,240,0,null(),null());
HXLINE( 142)		this->house2->set_immovable(true);
HXLINE( 143)		this->add(this->house2);
HXLINE( 145)		this->house2Door =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,null(),null(),null())->makeGraphic(240,240,0,null(),null());
HXLINE( 146)		this->house2Door->set_immovable(true);
HXLINE( 147)		this->add(this->house2Door);
HXLINE( 149)		this->house3 =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,null(),null(),null())->makeGraphic(240,240,0,null(),null());
HXLINE( 150)		this->house3->set_immovable(true);
HXLINE( 151)		this->add(this->house3);
HXLINE( 153)		this->house3Door =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,null(),null(),null())->makeGraphic(240,240,0,null(),null());
HXLINE( 154)		this->house3Door->set_immovable(true);
HXLINE( 155)		this->add(this->house3Door);
HXLINE( 157)		this->house4 =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,null(),null(),null())->makeGraphic(240,240,0,null(),null());
HXLINE( 158)		this->house4->set_immovable(true);
HXLINE( 159)		this->add(this->house4);
HXLINE( 161)		this->house4Door =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,null(),null(),null())->makeGraphic(240,240,0,null(),null());
HXLINE( 162)		this->house4Door->set_immovable(true);
HXLINE( 163)		this->add(this->house4Door);
HXLINE( 166)		this->shop =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,null(),null(),null())->makeGraphic(240,240,0,null(),null());
HXLINE( 167)		this->shop->set_immovable(true);
HXLINE( 168)		this->add(this->shop);
HXLINE( 171)		this->enemy =  ::flixel::group::FlxTypedGroup_obj::__alloc( HX_CTX ,null());
HXLINE( 172)		this->add(this->enemy);
HXLINE( 174)		this->npc =  ::flixel::group::FlxTypedGroup_obj::__alloc( HX_CTX ,null());
HXLINE( 175)		this->add(this->npc);
HXLINE( 178)		this->airdrop =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,null(),null(),null())->loadGraphic(HX_("assets/images/airdrop.png",a9,8b,2b,2c),true,192,192,null(),null());
HXLINE( 179)		this->airdrop->animation->add(HX_("drop",2f,38,70,42),::Array_obj< int >::fromData( _hx_array_data_4ad97aee_4,5),6,false,null(),null());
HXLINE( 180)		this->airdrop->set_visible(false);
HXLINE( 181)		this->add(this->airdrop);
HXLINE( 184)		this->player =  ::Player_obj::__alloc( HX_CTX ,null(),null());
HXLINE( 185)		this->add(this->player);
HXLINE( 186)		::flixel::FlxG_obj::camera->follow(this->player,::flixel::FlxCameraFollowStyle_obj::TOPDOWN_TIGHT_dyn(),1);
HXLINE( 189)		this->through = this->map->loadTilemap(HX_("assets/images/mtSmall.png",50,bb,bc,ad),HX_("through",45,48,3d,5a),null());
HXLINE( 190)		this->through->follow(null(),null(),null());
HXLINE( 191)		this->add(this->through);
HXLINE( 194)		this->tip =  ::Tip_obj::__alloc( HX_CTX );
HXLINE( 195)		this->add(this->tip);
HXLINE( 198)		this->bag =  ::Bag_obj::__alloc( HX_CTX );
HXLINE( 199)		this->add(this->bag);
HXLINE( 202)		this->combatHud =  ::CombatHUD_obj::__alloc( HX_CTX );
HXLINE( 203)		this->add(this->combatHud);
HXLINE( 206)		this->dia =  ::Dia_obj::__alloc( HX_CTX );
HXLINE( 207)		this->add(this->dia);
HXLINE( 210)		this->map->loadEntities(this->placeEntities_dyn(),HX_("entities",41,96,95,92));
HXLINE( 213)		this->ufo =  ::flixel::text::FlxText_obj::__alloc( HX_CTX ,0,0,600,HX_("ufo",fe,20,59,00),60,null());
HXLINE( 215)		this->ufo->scrollFactor->set(0,0);
HXLINE( 216)		this->add(this->ufo);
HXLINE( 217)		this->ufo->set_visible(false);
HXLINE( 220)		this->save =  ::flixel::util::FlxSave_obj::__alloc( HX_CTX );
HXLINE( 221)		this->save->bind(HX_("DefiAdv",6f,39,37,6e),null());
HXLINE( 223)		this->loadFile();
HXLINE( 227)		::flixel::FlxG_obj::sound->playMusic(HX_("assets/music/streetTheme.ogg",71,ac,25,df),((Float)0.3),true,null());
HXLINE( 229)		::flixel::FlxG_obj::mouse->set_visible(false);
HXLINE( 231)		::flixel::FlxG_obj::camera->fade(-16777216,((Float)0.33),true,null(),null());
HXLINE( 232)		this->super::create();
            	}


void StreetState_obj::placeEntities( ::Dynamic entity){
            	HX_GC_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_237_placeEntities)
HXLINE( 238)		int x = ( (int)(entity->__Field(HX_("x",78,00,00,00),::hx::paccDynamic)) );
HXLINE( 239)		int y = ( (int)(entity->__Field(HX_("y",79,00,00,00),::hx::paccDynamic)) );
HXLINE( 241)		::String _hx_switch_0 = ( (::String)(entity->__Field(HX_("name",4b,72,ff,48),::hx::paccDynamic)) );
            		if (  (_hx_switch_0==HX_("airdrop",b9,3b,39,a3)) ){
HXLINE( 320)			this->airdrop->setPosition(x,y);
HXDLIN( 320)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("dexNews",8a,21,5f,ec)) ){
HXLINE( 310)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->npc;
HXDLIN( 310)			_hx_tmp->add( ::NPC_obj::__alloc( HX_CTX ,( (Float)(x) ),( (Float)(y) ),::NpcType_obj::dexNews_dyn())).StaticCast<  ::NPC >();
HXDLIN( 310)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("homeDoor",2d,e3,f2,2d)) ){
HXLINE( 254)			this->homeDoor->setPosition((x + 36),y);
HXDLIN( 254)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("house1",91,7c,45,cc)) ){
HXLINE( 257)			this->house1->setPosition(x,y);
HXDLIN( 257)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("house1Door",9f,b6,14,2d)) ){
HXLINE( 260)			this->house1Door->setPosition(x,y);
HXDLIN( 260)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("house1Sign",6e,55,fa,36)) ){
HXLINE( 284)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->npc;
HXDLIN( 284)			_hx_tmp->add( ::NPC_obj::__alloc( HX_CTX ,( (Float)(x) ),( (Float)(y) ),::NpcType_obj::house1Sign_dyn())).StaticCast<  ::NPC >();
HXDLIN( 284)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("house2",92,7c,45,cc)) ){
HXLINE( 263)			this->house2->setPosition(x,y);
HXDLIN( 263)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("house2Door",20,4b,7b,c0)) ){
HXLINE( 266)			this->house2Door->setPosition(x,y);
HXDLIN( 266)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("house2Sign",ef,e9,60,ca)) ){
HXLINE( 300)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->npc;
HXDLIN( 300)			_hx_tmp->add( ::NPC_obj::__alloc( HX_CTX ,( (Float)(x) ),( (Float)(y) ),::NpcType_obj::house2Sign_dyn())).StaticCast<  ::NPC >();
HXDLIN( 300)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("house3",93,7c,45,cc)) ){
HXLINE( 269)			this->house3->setPosition(x,y);
HXDLIN( 269)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("house3Door",a1,df,e1,53)) ){
HXLINE( 272)			this->house3Door->setPosition(x,y);
HXDLIN( 272)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("house3Sign",70,7e,c7,5d)) ){
HXLINE( 306)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->npc;
HXDLIN( 306)			_hx_tmp->add( ::NPC_obj::__alloc( HX_CTX ,( (Float)(x) ),( (Float)(y) ),::NpcType_obj::house3Sign_dyn())).StaticCast<  ::NPC >();
HXDLIN( 306)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("house4",94,7c,45,cc)) ){
HXLINE( 275)			this->house4->setPosition(x,y);
HXDLIN( 275)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("house4Door",22,74,48,e7)) ){
HXLINE( 278)			this->house4Door->setPosition(x,y);
HXLINE( 279)			this->houseDis = ::Std_obj::_hx_int((this->house4Door->y - this->house4->y));
HXLINE( 277)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("house4Sign",f1,12,2e,f1)) ){
HXLINE( 314)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->npc;
HXDLIN( 314)			_hx_tmp->add( ::NPC_obj::__alloc( HX_CTX ,( (Float)(x) ),( (Float)(y) ),::NpcType_obj::house4Sign_dyn())).StaticCast<  ::NPC >();
HXDLIN( 314)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("mathChart",f6,55,9f,c2)) ){
HXLINE( 288)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->npc;
HXDLIN( 288)			_hx_tmp->add( ::NPC_obj::__alloc( HX_CTX ,( (Float)(x) ),( (Float)(y) ),::NpcType_obj::mathChart_dyn())).StaticCast<  ::NPC >();
HXDLIN( 288)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("minerDoor",8d,3b,b4,57)) ){
HXLINE( 252)			this->minerDoor->setPosition((x + 84),y);
HXDLIN( 252)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("p1",c1,61,00,00)) ){
HXLINE( 286)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->npc;
HXDLIN( 286)			_hx_tmp->add( ::NPC_obj::__alloc( HX_CTX ,( (Float)(x) ),( (Float)(y) ),::NpcType_obj::p1_dyn())).StaticCast<  ::NPC >();
HXDLIN( 286)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("p1ApToCoMach",d0,bc,c7,3d)) ){
HXLINE( 294)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->npc;
HXDLIN( 294)			_hx_tmp->add( ::NPC_obj::__alloc( HX_CTX ,( (Float)(x) ),( (Float)(y) ),::NpcType_obj::p1ApToCoMach_dyn())).StaticCast<  ::NPC >();
HXDLIN( 294)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("p1BaToCoMach",a0,0d,ed,a1)) ){
HXLINE( 290)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->npc;
HXDLIN( 290)			_hx_tmp->add( ::NPC_obj::__alloc( HX_CTX ,( (Float)(x) ),( (Float)(y) ),::NpcType_obj::p1BaToCoMach_dyn())).StaticCast<  ::NPC >();
HXDLIN( 290)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("p1CoToApMach",50,1f,1b,b2)) ){
HXLINE( 292)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->npc;
HXDLIN( 292)			_hx_tmp->add( ::NPC_obj::__alloc( HX_CTX ,( (Float)(x) ),( (Float)(y) ),::NpcType_obj::p1CoToApMach_dyn())).StaticCast<  ::NPC >();
HXDLIN( 292)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("p1CoToDeMach",e2,d2,c4,8f)) ){
HXLINE( 296)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->npc;
HXDLIN( 296)			_hx_tmp->add( ::NPC_obj::__alloc( HX_CTX ,( (Float)(x) ),( (Float)(y) ),::NpcType_obj::p1CoToDeMach_dyn())).StaticCast<  ::NPC >();
HXDLIN( 296)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("p1DeToCoMach",62,a1,47,6e)) ){
HXLINE( 298)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->npc;
HXDLIN( 298)			_hx_tmp->add( ::NPC_obj::__alloc( HX_CTX ,( (Float)(x) ),( (Float)(y) ),::NpcType_obj::p1DeToCoMach_dyn())).StaticCast<  ::NPC >();
HXDLIN( 298)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("p2",c2,61,00,00)) ){
HXLINE( 302)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->npc;
HXDLIN( 302)			_hx_tmp->add( ::NPC_obj::__alloc( HX_CTX ,( (Float)(x) ),( (Float)(y) ),::NpcType_obj::p2_dyn())).StaticCast<  ::NPC >();
HXDLIN( 302)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("p2Mach",db,c9,30,c5)) ){
HXLINE( 304)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->npc;
HXDLIN( 304)			_hx_tmp->add( ::NPC_obj::__alloc( HX_CTX ,( (Float)(x) ),( (Float)(y) ),::NpcType_obj::p2Mach_dyn())).StaticCast<  ::NPC >();
HXDLIN( 304)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("p3",c3,61,00,00)) ){
HXLINE( 308)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->npc;
HXDLIN( 308)			_hx_tmp->add( ::NPC_obj::__alloc( HX_CTX ,( (Float)(x) ),( (Float)(y) ),::NpcType_obj::p3_dyn())).StaticCast<  ::NPC >();
HXDLIN( 308)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("p3Mach",5c,5e,97,58)) ){
HXLINE( 312)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->npc;
HXDLIN( 312)			_hx_tmp->add( ::NPC_obj::__alloc( HX_CTX ,( (Float)(x) ),( (Float)(y) ),::NpcType_obj::p3Mach_dyn())).StaticCast<  ::NPC >();
HXDLIN( 312)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("rod",07,e2,56,00)) ){
HXLINE( 316)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->enemy;
HXDLIN( 316)			_hx_tmp->add( ::Enemy_obj::__alloc( HX_CTX ,( (Float)(x) ),( (Float)(y) ),::EnemyType_obj::rod_dyn())).StaticCast<  ::Enemy >();
HXDLIN( 316)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("saveStone",e8,17,c3,12)) ){
HXLINE( 249)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->npc;
HXDLIN( 249)			_hx_tmp->add( ::NPC_obj::__alloc( HX_CTX ,( (Float)(x) ),( (Float)(y) ),::NpcType_obj::saveStone_dyn())).StaticCast<  ::NPC >();
HXDLIN( 249)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("sea",8f,9b,57,00)) ){
HXLINE( 322)			 ::flixel::FlxSprite s =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,x,y,null())->loadGraphic(HX_("assets/images/sea.png",ff,0f,b9,fa),true,480,240,null(),null());
HXLINE( 323)			s->set_flipX(true);
HXLINE( 324)			s->animation->add(HX_("oui",83,a0,54,00),::Array_obj< int >::fromData( _hx_array_data_4ad97aee_7,4),((Float)2.5),true,null(),null());
HXLINE( 325)			s->animation->play(HX_("oui",83,a0,54,00),null(),null(),null());
HXLINE( 326)			s->set_immovable(true);
HXLINE( 327)			this->sea->add(s).StaticCast<  ::flixel::FlxSprite >();
HXLINE( 321)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("shop",f6,d4,52,4c)) ){
HXLINE( 282)			this->shop->setPosition(x,y);
HXDLIN( 282)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("signApple",dd,67,f0,a5)) ){
HXLINE( 246)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->npc;
HXDLIN( 246)			_hx_tmp->add( ::NPC_obj::__alloc( HX_CTX ,( (Float)((x + 60)) ),( (Float)(y) ),::NpcType_obj::signApple_dyn())).StaticCast<  ::NPC >();
HXDLIN( 246)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("signDefi",e1,71,0c,72)) ){
HXLINE( 244)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->npc;
HXDLIN( 244)			_hx_tmp->add( ::NPC_obj::__alloc( HX_CTX ,( (Float)((x + 60)) ),( (Float)(y) ),::NpcType_obj::signDefi_dyn())).StaticCast<  ::NPC >();
HXDLIN( 244)			goto _hx_goto_5;
            		}
            		if (  (_hx_switch_0==HX_("starter",4f,29,1b,35)) ){
HXLINE( 318)			 ::flixel::group::FlxTypedGroup _hx_tmp = this->enemy;
HXDLIN( 318)			_hx_tmp->add( ::Enemy_obj::__alloc( HX_CTX ,( (Float)(x) ),( (Float)(y) ),::EnemyType_obj::starter_dyn())).StaticCast<  ::Enemy >();
HXDLIN( 318)			goto _hx_goto_5;
            		}
            		_hx_goto_5:;
            	}


HX_DEFINE_DYNAMIC_FUNC1(StreetState_obj,placeEntities,(void))

void StreetState_obj::saveFile(){
            	HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_333_saveFile)
HXLINE( 336)		this->save->data->__SetField(HX_("bananaValue",cc,cc,f1,ec),this->bag->bananaCounter,::hx::paccDynamic);
HXLINE( 337)		this->save->data->__SetField(HX_("diamondValue",7d,77,b0,a2),this->bag->diamondCounter,::hx::paccDynamic);
HXLINE( 339)		this->save->data->__SetField(HX_("shibaInvest",48,fd,8d,02),this->bag->shibaInvest,::hx::paccDynamic);
HXLINE( 340)		this->save->data->__SetField(HX_("shibaWave",4c,70,e1,4f),this->bag->shibaWave,::hx::paccDynamic);
HXLINE( 342)		this->save->data->__SetField(HX_("nftInvest",51,c2,fb,19),this->bag->nftInvest,::hx::paccDynamic);
HXLINE( 343)		this->save->data->__SetField(HX_("nftWave",15,b1,e6,aa),this->bag->nftWave,::hx::paccDynamic);
HXLINE( 344)		this->save->data->__SetField(HX_("nftStyle",55,4a,eb,9d),this->combatHud->nftStyleNum,::hx::paccDynamic);
HXLINE( 346)		this->save->data->__SetField(HX_("bananaCoin",96,8c,07,e1),this->bag->bananaCoin,::hx::paccDynamic);
HXLINE( 347)		this->save->data->__SetField(HX_("appleCoin",0b,1c,90,a7),this->bag->appleCoin,::hx::paccDynamic);
HXLINE( 350)		this->save->data->__SetField(HX_("saveStoneIntro",64,79,c3,53),this->dia->saveStoneIntro,::hx::paccDynamic);
HXLINE( 353)		this->save->data->__SetField(HX_("playerPos",b3,bc,c6,00),this->player->getPosition(null()),::hx::paccDynamic);
HXLINE( 356)		this->save->data->__SetField(HX_("place",c7,f4,8d,c4),HX_("street",03,18,2d,11),::hx::paccDynamic);
HXLINE( 357)		this->save->data->__SetField(HX_("buyStarter",a9,22,1b,10),this->combatHud->buyStarter,::hx::paccDynamic);
            	}


HX_DEFINE_DYNAMIC_FUNC0(StreetState_obj,saveFile,(void))

void StreetState_obj::loadFile(){
            	HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_362_loadFile)
HXLINE( 365)		this->bag->diamondUi->set_visible(true);
HXLINE( 366)		this->bag->bananaCounter = ( (int)(this->save->data->__Field(HX_("bananaValue",cc,cc,f1,ec),::hx::paccDynamic)) );
HXLINE( 367)		this->bag->diamondCounter = ( (Float)(this->save->data->__Field(HX_("diamondValue",7d,77,b0,a2),::hx::paccDynamic)) );
HXLINE( 369)		this->bag->shibaInvest = ( (int)(this->save->data->__Field(HX_("shibaInvest",48,fd,8d,02),::hx::paccDynamic)) );
HXLINE( 370)		this->bag->shibaWave = ( (Float)(this->save->data->__Field(HX_("shibaWave",4c,70,e1,4f),::hx::paccDynamic)) );
HXLINE( 372)		this->bag->nftInvest = ( (int)(this->save->data->__Field(HX_("nftInvest",51,c2,fb,19),::hx::paccDynamic)) );
HXLINE( 373)		this->bag->nftWave = ( (Float)(this->save->data->__Field(HX_("nftWave",15,b1,e6,aa),::hx::paccDynamic)) );
HXLINE( 374)		this->combatHud->nftStyleNum = ( (int)(this->save->data->__Field(HX_("nftStyle",55,4a,eb,9d),::hx::paccDynamic)) );
HXLINE( 376)		this->bag->bananaCoin = ( (Float)(this->save->data->__Field(HX_("bananaCoin",96,8c,07,e1),::hx::paccDynamic)) );
HXLINE( 377)		this->bag->appleCoin = ( (Float)(this->save->data->__Field(HX_("appleCoin",0b,1c,90,a7),::hx::paccDynamic)) );
HXLINE( 378)		this->bag->updateBag();
HXLINE( 379)		this->tip->set_visible(true);
HXLINE( 380)		this->tip->set_active(true);
HXLINE( 383)		if ((this->bag->shibaInvest != 0)) {
HXLINE( 385)			this->bag->firstShiba = true;
HXLINE( 386)			this->bag->shibaNotifText->set_text(HX_("done",82,f0,6d,42));
HXLINE( 387)			this->bag->countShibaWave();
            		}
            		else {
HXLINE( 390)			this->bag->shibaUi->set_visible(false);
            		}
HXLINE( 393)		if ((this->bag->nftInvest != 0)) {
HXLINE( 395)			this->bag->firstNft = true;
HXLINE( 396)			this->bag->nftNotifText->set_text(HX_("done",82,f0,6d,42));
HXLINE( 397)			this->bag->countNftWave(this->combatHud->nftStyleNum);
            		}
            		else {
HXLINE( 400)			this->bag->nftUi->set_visible(false);
            		}
HXLINE( 402)		this->dia->saveStoneIntro = ( (bool)(this->save->data->__Field(HX_("saveStoneIntro",64,79,c3,53),::hx::paccDynamic)) );
HXLINE( 405)		this->combatHud->buyStarter = ( (bool)(this->save->data->__Field(HX_("buyStarter",a9,22,1b,10),::hx::paccDynamic)) );
HXLINE( 406)		bool _hx_tmp;
HXDLIN( 406)		if (::hx::IsNotNull( this->save->data->__Field(HX_("playerPos",b3,bc,c6,00),::hx::paccDynamic) )) {
HXLINE( 406)			_hx_tmp = ::hx::IsNotNull( this->save->data->__Field(HX_("place",c7,f4,8d,c4),::hx::paccDynamic) );
            		}
            		else {
HXLINE( 406)			_hx_tmp = false;
            		}
HXDLIN( 406)		if (_hx_tmp) {
HXLINE( 408)			if (::hx::IsEq( this->save->data->__Field(HX_("place",c7,f4,8d,c4),::hx::paccDynamic),HX_("street",03,18,2d,11) )) {
HXLINE( 410)				this->player->setPosition( ::Dynamic(this->save->data->__Field(HX_("playerPos",b3,bc,c6,00),::hx::paccDynamic))->__Field(HX_("x",78,00,00,00),::hx::paccDynamic), ::Dynamic(this->save->data->__Field(HX_("playerPos",b3,bc,c6,00),::hx::paccDynamic))->__Field(HX_("y",79,00,00,00),::hx::paccDynamic));
HXLINE( 411)				this->tip->missionGetText(::MissionText_obj::exploreStreet_dyn());
            			}
            			else {
HXLINE( 413)				if (::hx::IsEq( this->save->data->__Field(HX_("place",c7,f4,8d,c4),::hx::paccDynamic),HX_("miner",7f,72,68,08) )) {
HXLINE( 415)					 ::Player _hx_tmp = this->player;
HXDLIN( 415)					Float _hx_tmp1 = this->minerDoor->x;
HXDLIN( 415)					Float _hx_tmp2 = this->minerDoor->get_width();
HXDLIN( 415)					Float _hx_tmp3 = (_hx_tmp1 + ((_hx_tmp2 - this->player->get_width()) / ( (Float)(2) )));
HXDLIN( 415)					_hx_tmp->setPosition(_hx_tmp3,(this->minerDoor->y - ( (Float)(60) )));
HXLINE( 416)					this->tip->missionGetText(::MissionText_obj::exploreStreet_dyn());
HXLINE( 417)					this->tip->tipGetText(::TipText_obj::streetSign_dyn());
HXLINE( 418)					this->saveFile();
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(StreetState_obj,loadFile,(void))

void StreetState_obj::update(Float elapsed){
            	HX_GC_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_426_update)
HXDLIN( 426)		 ::StreetState _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 427)		this->super::update(elapsed);
HXLINE( 428)		this->updateWhenDiaInvisible();
HXLINE( 429)		this->updateInCombat();
HXLINE( 430)		this->updateTalking();
HXLINE( 431)		this->updateC();
HXLINE( 432)		this->updateF4();
HXLINE( 435)		 ::flixel::text::FlxText _hx_tmp = this->ufo;
HXDLIN( 435)		::String _hx_tmp1 = (::Std_obj::string( ::Dynamic(this->save->data->__Field(HX_("place",c7,f4,8d,c4),::hx::paccDynamic))) + HX_(",",2c,00,00,00));
HXDLIN( 435)		_hx_tmp->set_text((_hx_tmp1 + ::Std_obj::string(::flixel::FlxG_obj::mouse->screenY)));
HXLINE( 436)		bool e = ::flixel::FlxG_obj::keys->checkKeyArrayState(::Array_obj< int >::fromData( _hx_array_data_4ad97aee_11,1),-1);
HXLINE( 437)		if (e) {
HXLINE( 441)			 ::Bag fh = this->bag;
HXDLIN( 441)			fh->diamondCounter = (fh->diamondCounter + 1000);
HXLINE( 442)			this->bag->updateBag();
            		}
HXLINE( 445)		bool _hx_tmp2;
HXDLIN( 445)		bool _hx_tmp3;
HXDLIN( 445)		if (this->dia->readDaSign) {
HXLINE( 445)			_hx_tmp3 = !(this->dia->visible);
            		}
            		else {
HXLINE( 445)			_hx_tmp3 = false;
            		}
HXDLIN( 445)		if (_hx_tmp3) {
HXLINE( 445)			_hx_tmp2 = !(this->getDaMis);
            		}
            		else {
HXLINE( 445)			_hx_tmp2 = false;
            		}
HXDLIN( 445)		if (_hx_tmp2) {
HXLINE( 447)			this->getDaMis = true;
HXLINE( 448)			this->tip->missionGetText(::MissionText_obj::streetFin_dyn());
            		}
HXLINE( 451)		bool _hx_tmp4;
HXDLIN( 451)		bool _hx_tmp5;
HXDLIN( 451)		if (this->dia->loan) {
HXLINE( 451)			_hx_tmp5 = !(this->firstLoan);
            		}
            		else {
HXLINE( 451)			_hx_tmp5 = false;
            		}
HXDLIN( 451)		if (_hx_tmp5) {
HXLINE( 451)			_hx_tmp4 = !(this->dia->visible);
            		}
            		else {
HXLINE( 451)			_hx_tmp4 = false;
            		}
HXDLIN( 451)		if (_hx_tmp4) {
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::StreetState,_gthis) HXARGC(1)
            			void _hx_run( ::flixel::util::FlxTimer timer){
            				HX_GC_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_456_update)
HXLINE( 457)				 ::Bag fh = _gthis->bag;
HXDLIN( 457)				fh->diamondCounter = (fh->diamondCounter + (_gthis->dia->loanGain * _gthis->dia->interest));
HXLINE( 458)				 ::flixel::text::FlxText _gthis1 = _gthis->bag->diamondText;
HXDLIN( 458)				_gthis1->set_text(::Std_obj::string(::flixel::math::FlxMath_obj::roundDecimal(_gthis->bag->diamondCounter,2)));
HXLINE( 459)				_gthis->bag->updateBag();
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 453)			this->firstLoan = true;
HXLINE( 454)			this->dia->loan = false;
HXLINE( 455)			 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(10, ::Dynamic(new _hx_Closure_0(_gthis)),0);
            		}
HXLINE( 464)		::flixel::FlxG_obj::overlap(this->player,this->ground,null(),null());
HXLINE( 465)		::flixel::FlxG_obj::overlap(this->player,this->road,null(),null());
HXLINE( 466)		{
HXLINE( 466)			 ::Dynamic NotifyCallback = null();
HXDLIN( 466)			::flixel::FlxG_obj::overlap(( ( ::flixel::FlxBasic)(this->player) ),( ( ::flixel::FlxBasic)(this->walls) ),NotifyCallback,::flixel::FlxObject_obj::separate_dyn());
            		}
HXLINE( 467)		::flixel::FlxG_obj::overlap(this->player,this->through,null(),null());
HXLINE( 469)		::flixel::FlxG_obj::overlap(( ( ::flixel::FlxBasic)(this->player) ),( ( ::flixel::FlxBasic)(this->npc) ),this->npcTalk_dyn(),::flixel::FlxObject_obj::separate_dyn());
HXLINE( 471)		::flixel::FlxG_obj::overlap(( ( ::flixel::FlxBasic)(this->player) ),( ( ::flixel::FlxBasic)(this->minerDoor) ),this->goToMiner_dyn(),::flixel::FlxObject_obj::separate_dyn());
HXLINE( 472)		::flixel::FlxG_obj::overlap(( ( ::flixel::FlxBasic)(this->player) ),( ( ::flixel::FlxBasic)(this->homeDoor) ),this->goHome_dyn(),::flixel::FlxObject_obj::separate_dyn());
HXLINE( 473)		::flixel::FlxG_obj::overlap(( ( ::flixel::FlxBasic)(this->player) ),( ( ::flixel::FlxBasic)(this->shop) ),this->shopOpen_dyn(),::flixel::FlxObject_obj::separate_dyn());
HXLINE( 475)		::flixel::FlxG_obj::overlap(( ( ::flixel::FlxBasic)(this->player) ),( ( ::flixel::FlxBasic)(this->house1) ),this->houseIn_dyn(),::flixel::FlxObject_obj::separate_dyn());
HXLINE( 476)		::flixel::FlxG_obj::overlap(( ( ::flixel::FlxBasic)(this->player) ),( ( ::flixel::FlxBasic)(this->house2) ),this->houseIn_dyn(),::flixel::FlxObject_obj::separate_dyn());
HXLINE( 477)		::flixel::FlxG_obj::overlap(( ( ::flixel::FlxBasic)(this->player) ),( ( ::flixel::FlxBasic)(this->house3) ),this->houseIn_dyn(),::flixel::FlxObject_obj::separate_dyn());
HXLINE( 478)		::flixel::FlxG_obj::overlap(( ( ::flixel::FlxBasic)(this->player) ),( ( ::flixel::FlxBasic)(this->house4) ),this->houseIn_dyn(),::flixel::FlxObject_obj::separate_dyn());
HXLINE( 480)		::flixel::FlxG_obj::overlap(( ( ::flixel::FlxBasic)(this->player) ),( ( ::flixel::FlxBasic)(this->house1Door) ),this->houseOut_dyn(),::flixel::FlxObject_obj::separate_dyn());
HXLINE( 481)		::flixel::FlxG_obj::overlap(( ( ::flixel::FlxBasic)(this->player) ),( ( ::flixel::FlxBasic)(this->house2Door) ),this->houseOut_dyn(),::flixel::FlxObject_obj::separate_dyn());
HXLINE( 482)		::flixel::FlxG_obj::overlap(( ( ::flixel::FlxBasic)(this->player) ),( ( ::flixel::FlxBasic)(this->house3Door) ),this->houseOut_dyn(),::flixel::FlxObject_obj::separate_dyn());
HXLINE( 483)		::flixel::FlxG_obj::overlap(( ( ::flixel::FlxBasic)(this->player) ),( ( ::flixel::FlxBasic)(this->house4Door) ),this->houseOut_dyn(),::flixel::FlxObject_obj::separate_dyn());
HXLINE( 485)		::flixel::FlxG_obj::overlap(( ( ::flixel::FlxBasic)(this->player) ),( ( ::flixel::FlxBasic)(this->enemy) ),this->playerTouchEnemy_dyn(),::flixel::FlxObject_obj::separate_dyn());
HXLINE( 486)		::flixel::FlxG_obj::overlap(this->player,this->airdrop,this->airdropMoney_dyn(),null());
HXLINE( 488)		{
HXLINE( 488)			 ::Dynamic NotifyCallback1 = null();
HXDLIN( 488)			::flixel::FlxG_obj::overlap(( ( ::flixel::FlxBasic)(this->enemy) ),( ( ::flixel::FlxBasic)(this->walls) ),NotifyCallback1,::flixel::FlxObject_obj::separate_dyn());
            		}
HXLINE( 489)		{
HXLINE( 489)			 ::Dynamic NotifyCallback2 = null();
HXDLIN( 489)			::flixel::FlxG_obj::overlap(( ( ::flixel::FlxBasic)(this->enemy) ),( ( ::flixel::FlxBasic)(this->road) ),NotifyCallback2,::flixel::FlxObject_obj::separate_dyn());
            		}
HXLINE( 490)		{
HXLINE( 490)			 ::flixel::FlxBasic ObjectOrGroup2 = null();
HXDLIN( 490)			 ::Dynamic NotifyCallback3 = null();
HXDLIN( 490)			::flixel::FlxG_obj::overlap(( ( ::flixel::FlxBasic)(this->enemy) ),ObjectOrGroup2,NotifyCallback3,::flixel::FlxObject_obj::separate_dyn());
            		}
HXLINE( 491)		{
HXLINE( 491)			 ::Dynamic NotifyCallback4 = null();
HXDLIN( 491)			::flixel::FlxG_obj::overlap(( ( ::flixel::FlxBasic)(this->enemy) ),( ( ::flixel::FlxBasic)(this->npc) ),NotifyCallback4,::flixel::FlxObject_obj::separate_dyn());
            		}
            	}


void StreetState_obj::npcTalk( ::Player player, ::NPC npc){
            	HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_496_npcTalk)
HXLINE( 497)		this->talkYes = true;
HXLINE( 498)		this->npcType = npc->type;
            	}


HX_DEFINE_DYNAMIC_FUNC2(StreetState_obj,npcTalk,(void))

void StreetState_obj::goToMiner( ::Player player, ::flixel::FlxSprite minerDoor){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::StreetState,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_506_goToMiner)
HXLINE( 507)			_gthis->saveFile();
HXLINE( 508)			{
HXLINE( 508)				 ::flixel::FlxState nextState =  ::MinerState_obj::__alloc( HX_CTX ,null());
HXDLIN( 508)				if (::flixel::FlxG_obj::game->_state->switchTo(nextState)) {
HXLINE( 508)					::flixel::FlxG_obj::game->_requestedState = nextState;
            				}
            			}
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_503_goToMiner)
HXDLIN( 503)		 ::StreetState _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 504)		this->doorTele->play(null(),null(),null());
HXLINE( 505)		::flixel::FlxG_obj::camera->fade(-16777216,((Float)0.33),false, ::Dynamic(new _hx_Closure_0(_gthis)),null());
            	}


HX_DEFINE_DYNAMIC_FUNC2(StreetState_obj,goToMiner,(void))

void StreetState_obj::goHome( ::Player player, ::flixel::FlxSprite homeDoor){
            	HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_515_goHome)
HXDLIN( 515)		if ((this->bag->diamondCounter >= 888)) {
HXLINE( 517)			this->name = HX_W(u":N:\u4f60\u6709888\u80fd\u91cf\u5e63\u4e86\uff0c\u78ba\u5b9a\u8981\u96e2\u958bDeFi\u5cf6\u55ce\uff1f\n  \u662f\n  \u5426",bb48,3478);
HXLINE( 518)			this->txt = false;
HXLINE( 519)			this->playerUpDown();
HXLINE( 520)			this->dia->show(this->name,this->txt);
HXLINE( 521)			this->dia->getPointer(HX_("winGame",2e,06,3f,d5));
            		}
            		else {
HXLINE( 525)			this->name = HX_W(u":N:\u4f60\u9700\u8981888\u80fd\u91cf\u5e63\u624d\u80fd\u901a\u904e\u6b64\u50b3\u9001\u9ede\u3002",81c0,7971);
HXLINE( 526)			this->txt = false;
HXLINE( 527)			this->playerUpDown();
HXLINE( 528)			this->dia->show(this->name,this->txt);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(StreetState_obj,goHome,(void))

void StreetState_obj::houseIn( ::Player player, ::flixel::FlxSprite house){
            		HX_BEGIN_LOCAL_FUNC_S3(::hx::LocalFunc,_hx_Closure_0, ::StreetState,_gthis, ::Player,player, ::flixel::FlxSprite,house) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_536_houseIn)
HXLINE( 537)			 ::Player player1 = player;
HXDLIN( 537)			Float house1 = house->x;
HXDLIN( 537)			Float _hx_tmp = house->get_width();
HXDLIN( 537)			Float _hx_tmp1 = (house1 + ((_hx_tmp - player->get_width()) / ( (Float)(2) )));
HXDLIN( 537)			player1->setPosition(_hx_tmp1,((house->y + _gthis->houseDis) - ( (Float)(120) )));
HXLINE( 538)			::flixel::FlxG_obj::camera->fade(-16777216,((Float)0.33),true,null(),null());
HXLINE( 539)			bool _hx_tmp2;
HXDLIN( 539)			if (::hx::IsInstanceEq( house,_gthis->house1 )) {
HXLINE( 539)				_hx_tmp2 = !(_gthis->p1Talk);
            			}
            			else {
HXLINE( 539)				_hx_tmp2 = false;
            			}
HXDLIN( 539)			if (_hx_tmp2) {
HXLINE( 541)				_gthis->p1Talk = true;
HXLINE( 542)				_gthis->name = HX_("assets/data/house1Talk.txt",98,22,a6,f8);
HXLINE( 543)				_gthis->playerUpDown();
HXLINE( 544)				_gthis->dia->show(_gthis->name,true);
            			}
            			else {
HXLINE( 546)				bool _hx_tmp;
HXDLIN( 546)				if (::hx::IsInstanceEq( house,_gthis->house2 )) {
HXLINE( 546)					_hx_tmp = !(_gthis->p2Talk);
            				}
            				else {
HXLINE( 546)					_hx_tmp = false;
            				}
HXDLIN( 546)				if (_hx_tmp) {
HXLINE( 548)					_gthis->p2Talk = true;
HXLINE( 549)					_gthis->name = HX_("assets/data/house2Talk.txt",99,8b,97,cb);
HXLINE( 550)					_gthis->playerUpDown();
HXLINE( 551)					_gthis->dia->show(_gthis->name,true);
            				}
            				else {
HXLINE( 553)					bool _hx_tmp;
HXDLIN( 553)					if (::hx::IsInstanceEq( house,_gthis->house3 )) {
HXLINE( 553)						_hx_tmp = !(_gthis->p3Talk);
            					}
            					else {
HXLINE( 553)						_hx_tmp = false;
            					}
HXDLIN( 553)					if (_hx_tmp) {
HXLINE( 555)						_gthis->p3Talk = true;
HXLINE( 556)						_gthis->name = HX_("assets/data/house3Talk.txt",9a,f4,88,9e);
HXLINE( 557)						_gthis->playerUpDown();
HXLINE( 558)						_gthis->dia->show(_gthis->name,true);
            					}
            				}
            			}
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_534_houseIn)
HXDLIN( 534)		 ::StreetState _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 535)		::flixel::FlxG_obj::camera->fade(-16777216,((Float)0.33),false, ::Dynamic(new _hx_Closure_0(_gthis,player,house)),null());
            	}


HX_DEFINE_DYNAMIC_FUNC2(StreetState_obj,houseIn,(void))

void StreetState_obj::houseOut( ::Player player, ::flixel::FlxSprite houseDoor){
            		HX_BEGIN_LOCAL_FUNC_S3(::hx::LocalFunc,_hx_Closure_1, ::StreetState,_gthis, ::Player,player, ::flixel::FlxSprite,houseDoor) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_567_houseOut)
HXLINE( 568)			 ::Player player1 = player;
HXDLIN( 568)			Float houseDoor1 = houseDoor->x;
HXDLIN( 568)			Float _hx_tmp = houseDoor->get_width();
HXDLIN( 568)			Float _hx_tmp1 = (houseDoor1 + ((_hx_tmp - player->get_width()) / ( (Float)(2) )));
HXDLIN( 568)			player1->setPosition(_hx_tmp1,((houseDoor->y - ( (Float)(_gthis->houseDis) )) + 240));
HXLINE( 569)			::flixel::FlxG_obj::camera->fade(-16777216,((Float)0.33),true,null(),null());
HXLINE( 570)			if (::hx::IsInstanceEq( houseDoor,_gthis->house3Door )) {
HXLINE( 572)				if (!(_gthis->firstLoan)) {
HXLINE( 573)					_gthis->tip->tipGetText(::TipText_obj::loan_dyn());
            				}
            				else {
            					HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::StreetState,_gthis) HXARGC(1)
            					void _hx_run( ::flixel::tweens::FlxTween _){
            						HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_580_houseOut)
HXLINE( 580)						_gthis->airdrop->animation->play(HX_("drop",2f,38,70,42),null(),null(),null());
            					}
            					HX_END_LOCAL_FUNC1((void))

HXLINE( 576)					_gthis->airdrop->set_visible(true);
HXLINE( 577)					::flixel::tweens::FlxTween_obj::tween(_gthis->airdrop, ::Dynamic(::hx::Anon_obj::Create(2)
            						->setFixed(0,HX_("x",78,00,00,00),6840)
            						->setFixed(1,HX_("y",79,00,00,00),2160)),2, ::Dynamic(::hx::Anon_obj::Create(1)
            						->setFixed(0,HX_("onComplete",f8,d4,7e,5d), ::Dynamic(new _hx_Closure_0(_gthis)))));
            				}
            			}
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_565_houseOut)
HXDLIN( 565)		 ::StreetState _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 566)		::flixel::FlxG_obj::camera->fade(-16777216,((Float)0.33),false, ::Dynamic(new _hx_Closure_1(_gthis,player,houseDoor)),null());
            	}


HX_DEFINE_DYNAMIC_FUNC2(StreetState_obj,houseOut,(void))

void StreetState_obj::playerTouchEnemy( ::Player player, ::Enemy enemy){
            	HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_591_playerTouchEnemy)
HXDLIN( 591)		bool _hx_tmp;
HXDLIN( 591)		bool _hx_tmp1;
HXDLIN( 591)		bool _hx_tmp2;
HXDLIN( 591)		bool _hx_tmp3;
HXDLIN( 591)		if (player->alive) {
HXDLIN( 591)			_hx_tmp3 = player->exists;
            		}
            		else {
HXDLIN( 591)			_hx_tmp3 = false;
            		}
HXDLIN( 591)		if (_hx_tmp3) {
HXDLIN( 591)			_hx_tmp2 = enemy->alive;
            		}
            		else {
HXDLIN( 591)			_hx_tmp2 = false;
            		}
HXDLIN( 591)		if (_hx_tmp2) {
HXDLIN( 591)			_hx_tmp1 = enemy->exists;
            		}
            		else {
HXDLIN( 591)			_hx_tmp1 = false;
            		}
HXDLIN( 591)		if (_hx_tmp1) {
HXDLIN( 591)			_hx_tmp = (enemy->alpha != ((Float)0.5));
            		}
            		else {
HXDLIN( 591)			_hx_tmp = false;
            		}
HXDLIN( 591)		if (_hx_tmp) {
HXLINE( 593)			bool _hx_tmp;
HXDLIN( 593)			bool _hx_tmp1;
HXDLIN( 593)			if (::hx::IsPointerEq( enemy->type,::EnemyType_obj::rod_dyn() )) {
HXLINE( 593)				_hx_tmp1 = (this->bag->bananaCoin >= 5);
            			}
            			else {
HXLINE( 593)				_hx_tmp1 = false;
            			}
HXDLIN( 593)			if (!(_hx_tmp1)) {
HXLINE( 593)				if (::hx::IsPointerEq( enemy->type,::EnemyType_obj::starter_dyn() )) {
HXLINE( 593)					_hx_tmp = (this->bag->diamondCounter >= 5);
            				}
            				else {
HXLINE( 593)					_hx_tmp = false;
            				}
            			}
            			else {
HXLINE( 593)				_hx_tmp = true;
            			}
HXDLIN( 593)			if (_hx_tmp) {
HXLINE( 596)				if (::hx::IsPointerEq( enemy->type,::EnemyType_obj::starter_dyn() )) {
HXLINE( 597)					this->combatHud->starterInStreet = true;
            				}
HXLINE( 598)				this->touchEnemy->play(null(),null(),null());
HXLINE( 599)				this->inCombat = true;
HXLINE( 600)				player->set_active(false);
HXLINE( 601)				enemy->set_active(false);
HXLINE( 602)				this->combatHud->initCombat(this->bag->diamondCounter,this->bag->diamondText,this->bag->bananaCoin,this->bag->appleCoin,this->bag->dexCoin,enemy);
            			}
            			else {
HXLINE( 606)				if (::hx::IsPointerEq( enemy->type,::EnemyType_obj::rod_dyn() )) {
HXLINE( 607)					this->name = HX_W(u":N:\u4f60\u6c92\u6709\u8db3\u5920\u7684\u9999\u8549\u5e63\uff01\u4f60\u9700\u8981\u81f3\u5c11 5 \u9999\u8549\u5e63\uff01",b5ed,3af9);
            				}
            				else {
HXLINE( 608)					if (::hx::IsPointerEq( enemy->type,::EnemyType_obj::starter_dyn() )) {
HXLINE( 609)						this->name = HX_W(u":N:\u4f60\u6c92\u6709\u8db3\u5920\u7684\u80fd\u91cf\u5e63\uff01\u4f60\u9700\u8981\u81f3\u5c11 5 \u80fd\u91cf\u5e63\uff01",a78b,ce16);
            					}
            				}
HXLINE( 610)				this->txt = false;
HXLINE( 611)				this->playerUpDown();
HXLINE( 612)				this->dia->show(this->name,this->txt);
HXLINE( 613)				this->combatHud->enemy = enemy;
HXLINE( 614)				this->combatHud->enemy->set_alpha(((Float)0.5));
HXLINE( 615)				this->enemyFlicker = true;
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(StreetState_obj,playerTouchEnemy,(void))

void StreetState_obj::updateInCombat(){
            	HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_623_updateInCombat)
HXDLIN( 623)		bool _hx_tmp;
HXDLIN( 623)		if (this->inCombat) {
HXDLIN( 623)			_hx_tmp = !(this->combatHud->visible);
            		}
            		else {
HXDLIN( 623)			_hx_tmp = false;
            		}
HXDLIN( 623)		if (_hx_tmp) {
HXLINE( 625)			this->combatHud->enemy->set_alpha(((Float)0.5));
HXLINE( 626)			this->enemyFlicker = true;
HXLINE( 627)			this->bag->diamondCounter = this->combatHud->diamond;
HXLINE( 628)			this->bag->bananaCoin = this->combatHud->bananaCoin;
HXLINE( 629)			this->bag->appleCoin = this->combatHud->appleCoin;
HXLINE( 630)			this->bag->dexCoin = this->combatHud->dexCoin;
HXLINE( 631)			this->bag->updateBag();
HXLINE( 632)			this->inCombat = false;
HXLINE( 634)			bool _hx_tmp;
HXDLIN( 634)			if (::hx::IsPointerEq( this->combatHud->enemy->type,::EnemyType_obj::rod_dyn() )) {
HXLINE( 634)				_hx_tmp = ::hx::IsPointerEq( this->combatHud->outcome,::Outcome_obj::WIN_dyn() );
            			}
            			else {
HXLINE( 634)				_hx_tmp = false;
            			}
HXDLIN( 634)			if (_hx_tmp) {
HXLINE( 636)				 ::Bag fh = this->bag;
HXDLIN( 636)				fh->rodInvest = (fh->rodInvest + this->combatHud->investNum);
HXLINE( 637)				 ::Bag fh1 = this->bag;
HXDLIN( 637)				fh1->rodWave = (fh1->rodWave + this->bag->rodInvest);
HXLINE( 638)				this->bag->rodNum = this->combatHud->rodNum;
HXLINE( 639)				if (!(this->bag->rodUi->visible)) {
HXLINE( 641)					this->bag->rodUi->set_visible(true);
HXLINE( 642)					this->bag->countRodWave();
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(StreetState_obj,updateInCombat,(void))

void StreetState_obj::airdropMoney( ::Player player, ::flixel::FlxSprite airdrop){
            	HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_651_airdropMoney)
HXDLIN( 651)		if (airdrop->visible) {
HXLINE( 653)			airdrop->kill();
HXLINE( 654)			this->name = HX_("assets/data/airdropTalk.txt",2e,c6,92,20);
HXLINE( 655)			this->txt = true;
HXLINE( 656)			this->playerUpDown();
HXLINE( 657)			this->dia->show(this->name,this->txt);
HXLINE( 658)			 ::Bag fh = this->bag;
HXDLIN( 658)			fh->dexCoin = (fh->dexCoin + 500);
HXLINE( 659)			 ::flixel::text::FlxText _hx_tmp = this->bag->dexCoinText;
HXDLIN( 659)			_hx_tmp->set_text(::Std_obj::string(this->bag->dexCoin));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(StreetState_obj,airdropMoney,(void))

void StreetState_obj::shopOpen( ::Player player, ::flixel::FlxSprite shop){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::StreetState,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_667_shopOpen)
HXLINE( 668)			_gthis->bag->buyAndSell();
HXLINE( 669)			::flixel::FlxG_obj::sound->playMusic(HX_("assets/music/shopTheme.ogg",9e,e2,37,1e),((Float)0.3),true,null());
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_665_shopOpen)
HXDLIN( 665)		 ::StreetState _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 666)		::flixel::FlxG_obj::camera->fade(-16777216,((Float)0.33),false, ::Dynamic(new _hx_Closure_0(_gthis)),null());
            	}


HX_DEFINE_DYNAMIC_FUNC2(StreetState_obj,shopOpen,(void))

void StreetState_obj::updateTalking(){
            	HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_675_updateTalking)
HXLINE( 676)		bool enter = ::flixel::FlxG_obj::keys->checkKeyArrayState(::Array_obj< int >::fromData( _hx_array_data_4ad97aee_28,2),-1);
HXLINE( 679)		if (::flixel::FlxG_obj::keys->checkKeyArrayState(::Array_obj< int >::fromData( _hx_array_data_4ad97aee_29,8),2)) {
HXLINE( 680)			this->talkYes = false;
            		}
HXLINE( 683)		bool _hx_tmp;
HXDLIN( 683)		bool _hx_tmp1;
HXDLIN( 683)		bool _hx_tmp2;
HXDLIN( 683)		bool _hx_tmp3;
HXDLIN( 683)		if (this->talkYes) {
HXLINE( 683)			_hx_tmp3 = enter;
            		}
            		else {
HXLINE( 683)			_hx_tmp3 = false;
            		}
HXDLIN( 683)		if (_hx_tmp3) {
HXLINE( 683)			_hx_tmp2 = !(this->bag->itemUi->visible);
            		}
            		else {
HXLINE( 683)			_hx_tmp2 = false;
            		}
HXDLIN( 683)		if (_hx_tmp2) {
HXLINE( 683)			_hx_tmp1 = !(this->bag->dealUi->visible);
            		}
            		else {
HXLINE( 683)			_hx_tmp1 = false;
            		}
HXDLIN( 683)		if (_hx_tmp1) {
HXLINE( 683)			_hx_tmp = !(this->bag->shopUi->visible);
            		}
            		else {
HXLINE( 683)			_hx_tmp = false;
            		}
HXDLIN( 683)		if (_hx_tmp) {
HXLINE( 685)			this->talkYes = false;
HXLINE( 686)			this->playerUpDown();
HXLINE( 689)			if (::hx::IsPointerEq( this->npcType,::NpcType_obj::saveStone_dyn() )) {
HXLINE( 691)				this->saveFile();
HXLINE( 692)				this->dia->saveShowTime(this->bag->diamondCounter,HX_W(u"DeFi\u8857",96fa,01e3));
HXLINE( 693)				if (this->dia->saveStoneIntro) {
HXLINE( 694)					this->saveNoise->play(null(),null(),null());
            				}
            			}
            			else {
HXLINE( 696)				if (::hx::IsPointerEq( this->npcType,::NpcType_obj::p1ApToCoMach_dyn() )) {
HXLINE( 698)					if (this->bag->rodUi->visible) {
HXLINE( 699)						this->bag->rodTimer->active = false;
            					}
            				}
            			}
HXLINE( 703)			bool _hx_tmp;
HXDLIN( 703)			bool _hx_tmp1;
HXDLIN( 703)			bool _hx_tmp2;
HXDLIN( 703)			bool _hx_tmp3;
HXDLIN( 703)			bool _hx_tmp4;
HXDLIN( 703)			bool _hx_tmp5;
HXDLIN( 703)			if (::hx::IsPointerNotEq( this->npcType,::NpcType_obj::p1BaToCoMach_dyn() )) {
HXLINE( 703)				_hx_tmp5 = ::hx::IsPointerEq( this->npcType,::NpcType_obj::p1CoToApMach_dyn() );
            			}
            			else {
HXLINE( 703)				_hx_tmp5 = true;
            			}
HXDLIN( 703)			if (!(_hx_tmp5)) {
HXLINE( 703)				_hx_tmp4 = ::hx::IsPointerEq( this->npcType,::NpcType_obj::p1ApToCoMach_dyn() );
            			}
            			else {
HXLINE( 703)				_hx_tmp4 = true;
            			}
HXDLIN( 703)			if (!(_hx_tmp4)) {
HXLINE( 703)				_hx_tmp3 = ::hx::IsPointerEq( this->npcType,::NpcType_obj::p1CoToDeMach_dyn() );
            			}
            			else {
HXLINE( 703)				_hx_tmp3 = true;
            			}
HXDLIN( 703)			if (!(_hx_tmp3)) {
HXLINE( 703)				_hx_tmp2 = ::hx::IsPointerEq( this->npcType,::NpcType_obj::p1DeToCoMach_dyn() );
            			}
            			else {
HXLINE( 703)				_hx_tmp2 = true;
            			}
HXDLIN( 703)			if (!(_hx_tmp2)) {
HXLINE( 703)				_hx_tmp1 = ::hx::IsPointerEq( this->npcType,::NpcType_obj::p2Mach_dyn() );
            			}
            			else {
HXLINE( 703)				_hx_tmp1 = true;
            			}
HXDLIN( 703)			if (!(_hx_tmp1)) {
HXLINE( 703)				_hx_tmp = ::hx::IsPointerEq( this->npcType,::NpcType_obj::p3Mach_dyn() );
            			}
            			else {
HXLINE( 703)				_hx_tmp = true;
            			}
HXDLIN( 703)			if (_hx_tmp) {
HXLINE( 705)				this->dia->getDiamond(this->bag->diamondCounter,this->bag->diamondText,this->bag->bananaCoin,this->bag->appleCoin,this->bag->rodWave,this->bag->dexCoin);
            			}
HXLINE( 707)			this->dia->context(this->npcType);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(StreetState_obj,updateTalking,(void))

void StreetState_obj::updateWhenDiaInvisible(){
            	HX_GC_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_713_updateWhenDiaInvisible)
HXDLIN( 713)		 ::StreetState _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 716)		bool _hx_tmp;
HXDLIN( 716)		bool _hx_tmp1;
HXDLIN( 716)		bool _hx_tmp2;
HXDLIN( 716)		bool _hx_tmp3;
HXDLIN( 716)		if (!(this->dia->visible)) {
HXLINE( 716)			_hx_tmp3 = this->bag->shopUi->visible;
            		}
            		else {
HXLINE( 716)			_hx_tmp3 = true;
            		}
HXDLIN( 716)		if (!(_hx_tmp3)) {
HXLINE( 716)			_hx_tmp2 = this->bag->dealUi->visible;
            		}
            		else {
HXLINE( 716)			_hx_tmp2 = true;
            		}
HXDLIN( 716)		if (!(_hx_tmp2)) {
HXLINE( 716)			_hx_tmp1 = this->bag->itemUi->visible;
            		}
            		else {
HXLINE( 716)			_hx_tmp1 = true;
            		}
HXDLIN( 716)		if (!(_hx_tmp1)) {
HXLINE( 716)			_hx_tmp = this->combatHud->visible;
            		}
            		else {
HXLINE( 716)			_hx_tmp = true;
            		}
HXDLIN( 716)		if (_hx_tmp) {
HXLINE( 718)			this->player->set_active(false);
HXLINE( 719)			this->enemy->set_active(false);
            		}
            		else {
HXLINE( 723)			this->player->set_active(true);
HXLINE( 724)			this->enemy->set_active(true);
            		}
HXLINE( 728)		if (!(this->dia->visible)) {
HXLINE( 731)			if (this->dia->win) {
            				HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::StreetState,_gthis) HXARGC(0)
            				void _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_734_updateWhenDiaInvisible)
HXLINE( 735)					_gthis->doorTele->play(null(),null(),null());
HXLINE( 736)					{
HXLINE( 736)						 ::flixel::FlxState nextState =  ::WinState_obj::__alloc( HX_CTX ,null());
HXDLIN( 736)						if (::flixel::FlxG_obj::game->_state->switchTo(nextState)) {
HXLINE( 736)							::flixel::FlxG_obj::game->_requestedState = nextState;
            						}
            					}
            				}
            				HX_END_LOCAL_FUNC0((void))

HXLINE( 733)				::flixel::FlxG_obj::camera->fade(-16777216,((Float)0.33),false, ::Dynamic(new _hx_Closure_0(_gthis)),null());
            			}
HXLINE( 740)			if (this->dia->updateDiamond) {
HXLINE( 742)				this->dia->updateDiamond = false;
HXLINE( 743)				this->bag->diamondCounter = this->dia->diamond;
HXLINE( 744)				this->bag->bananaCoin = ::flixel::math::FlxMath_obj::roundDecimal(this->dia->bananaCoin,2);
HXLINE( 745)				 ::flixel::text::FlxText _hx_tmp = this->bag->bananaCoinText;
HXDLIN( 745)				_hx_tmp->set_text(::Std_obj::string(this->bag->bananaCoin));
HXLINE( 746)				this->bag->appleCoin = ::flixel::math::FlxMath_obj::roundDecimal(this->dia->appleCoin,2);
HXLINE( 747)				 ::flixel::text::FlxText _hx_tmp1 = this->bag->appleCoinText;
HXDLIN( 747)				_hx_tmp1->set_text(::Std_obj::string((this->bag->appleCoin + this->bag->rodWave)));
HXLINE( 748)				this->bag->dexCoin = ::flixel::math::FlxMath_obj::roundDecimal(this->dia->dexCoin,2);
HXLINE( 749)				 ::flixel::text::FlxText _hx_tmp2 = this->bag->dexCoinText;
HXDLIN( 749)				_hx_tmp2->set_text(::Std_obj::string(this->bag->dexCoin));
HXLINE( 750)				this->bag->rodWave = this->dia->rodWave;
HXLINE( 752)				if (this->bag->rodUi->visible) {
HXLINE( 754)					if ((this->bag->rodWave > 0)) {
HXLINE( 755)						this->bag->rodTimer->active = true;
            					}
            					else {
HXLINE( 758)						this->bag->rodUi->set_visible(false);
HXLINE( 759)						this->bag->rodTimer->cancel();
            					}
            				}
HXLINE( 763)				this->bag->updateBag();
            			}
HXLINE( 766)			if (this->enemyFlicker) {
            				HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::StreetState,_gthis) HXARGC(1)
            				void _hx_run( ::flixel::util::FlxTimer timer){
            					HX_GC_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_770_updateWhenDiaInvisible)
HXLINE( 770)					_gthis->combatHud->enemy->set_alpha(( (Float)(1) ));
            				}
            				HX_END_LOCAL_FUNC1((void))

HXLINE( 768)				 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(5, ::Dynamic(new _hx_Closure_1(_gthis)),null());
HXLINE( 772)				this->enemyFlicker = false;
            			}
HXLINE( 775)			if (this->dia->saveStoneYes) {
HXLINE( 777)				this->dia->saveStoneYes = false;
HXLINE( 778)				this->name = ((HX_W(u":N:\u7329\u7329  DeFi\u8857  ",8d54,a93c) + this->bag->diamondCounter) + HX_W(u"\u80fd\u91cf\u5e63\n\u5b58\u6a94\u6210\u529f\uff01",463e,47f1));
HXLINE( 779)				this->saveNoise->play(null(),null(),null());
HXLINE( 780)				this->dia->show(this->name,false);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(StreetState_obj,updateWhenDiaInvisible,(void))

void StreetState_obj::playerUpDown(){
            	HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_790_playerUpDown)
HXDLIN( 790)		Float _hx_tmp = this->player->y;
HXDLIN( 790)		Float _hx_tmp1 = (_hx_tmp - (this->player->get_height() / ( (Float)(2) )));
HXDLIN( 790)		if (((_hx_tmp1 - (::flixel::FlxG_obj::camera->scroll->y * this->player->scrollFactor->y)) > (( (Float)(::flixel::FlxG_obj::height) ) / ( (Float)(2) )))) {
HXLINE( 791)			this->dia->diaUpDown = HX_("up",5b,66,00,00);
            		}
            		else {
HXLINE( 793)			this->dia->diaUpDown = HX_("down",62,f8,6d,42);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(StreetState_obj,playerUpDown,(void))

void StreetState_obj::updateF4(){
            	HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_798_updateF4)
HXLINE( 799)		bool f4 = ::flixel::FlxG_obj::keys->checkKeyArrayState(::Array_obj< int >::fromData( _hx_array_data_4ad97aee_35,1),-1);
HXLINE( 800)		bool _hx_tmp;
HXDLIN( 800)		if (f4) {
HXLINE( 800)			_hx_tmp = !(this->dia->visible);
            		}
            		else {
HXLINE( 800)			_hx_tmp = false;
            		}
HXDLIN( 800)		if (_hx_tmp) {
            			HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            			void _hx_run(){
            				HX_GC_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_805_updateF4)
HXLINE( 805)				 ::flixel::FlxState nextState =  ::MenuState_obj::__alloc( HX_CTX ,null());
HXDLIN( 805)				if (::flixel::FlxG_obj::game->_state->switchTo(nextState)) {
HXLINE( 805)					::flixel::FlxG_obj::game->_requestedState = nextState;
            				}
            			}
            			HX_END_LOCAL_FUNC0((void))

HXLINE( 802)			this->cancel->play(true,null(),null());
HXLINE( 803)			::flixel::FlxG_obj::camera->fade(-16777216,((Float).33),false, ::Dynamic(new _hx_Closure_0()),null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(StreetState_obj,updateF4,(void))

void StreetState_obj::updateC(){
            	HX_STACKFRAME(&_hx_pos_d01dfbdfb66e0ded_812_updateC)
HXLINE( 813)		bool c = ::flixel::FlxG_obj::keys->checkKeyArrayState(::Array_obj< int >::fromData( _hx_array_data_4ad97aee_38,1),-1);
HXLINE( 814)		bool _hx_tmp;
HXDLIN( 814)		bool _hx_tmp1;
HXDLIN( 814)		bool _hx_tmp2;
HXDLIN( 814)		bool _hx_tmp3;
HXDLIN( 814)		if (c) {
HXLINE( 814)			_hx_tmp3 = !(this->dia->visible);
            		}
            		else {
HXLINE( 814)			_hx_tmp3 = false;
            		}
HXDLIN( 814)		if (_hx_tmp3) {
HXLINE( 814)			_hx_tmp2 = !(this->bag->dealUi->visible);
            		}
            		else {
HXLINE( 814)			_hx_tmp2 = false;
            		}
HXDLIN( 814)		if (_hx_tmp2) {
HXLINE( 814)			_hx_tmp1 = !(this->bag->itemUi->visible);
            		}
            		else {
HXLINE( 814)			_hx_tmp1 = false;
            		}
HXDLIN( 814)		if (_hx_tmp1) {
HXLINE( 814)			_hx_tmp = !(this->bag->shopUi->visible);
            		}
            		else {
HXLINE( 814)			_hx_tmp = false;
            		}
HXDLIN( 814)		if (_hx_tmp) {
HXLINE( 816)			this->openBag->play(null(),null(),null());
HXLINE( 817)			this->bag->bagUiShow();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(StreetState_obj,updateC,(void))


::hx::ObjectPtr< StreetState_obj > StreetState_obj::__new( ::Dynamic MaxSize) {
	::hx::ObjectPtr< StreetState_obj > __this = new StreetState_obj();
	__this->__construct(MaxSize);
	return __this;
}

::hx::ObjectPtr< StreetState_obj > StreetState_obj::__alloc(::hx::Ctx *_hx_ctx, ::Dynamic MaxSize) {
	StreetState_obj *__this = (StreetState_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(StreetState_obj), true, "StreetState"));
	*(void **)__this = StreetState_obj::_hx_vtable;
	__this->__construct(MaxSize);
	return __this;
}

StreetState_obj::StreetState_obj()
{
}

void StreetState_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(StreetState);
	HX_MARK_MEMBER_NAME(player,"player");
	HX_MARK_MEMBER_NAME(tip,"tip");
	HX_MARK_MEMBER_NAME(bag,"bag");
	HX_MARK_MEMBER_NAME(getDaMis,"getDaMis");
	HX_MARK_MEMBER_NAME(cancel,"cancel");
	HX_MARK_MEMBER_NAME(touchEnemy,"touchEnemy");
	HX_MARK_MEMBER_NAME(openBag,"openBag");
	HX_MARK_MEMBER_NAME(doorTele,"doorTele");
	HX_MARK_MEMBER_NAME(saveNoise,"saveNoise");
	HX_MARK_MEMBER_NAME(dia,"dia");
	HX_MARK_MEMBER_NAME(diaUpDown,"diaUpDown");
	HX_MARK_MEMBER_NAME(name,"name");
	HX_MARK_MEMBER_NAME(txt,"txt");
	HX_MARK_MEMBER_NAME(talkYes,"talkYes");
	HX_MARK_MEMBER_NAME(enemy,"enemy");
	HX_MARK_MEMBER_NAME(inCombat,"inCombat");
	HX_MARK_MEMBER_NAME(combatHud,"combatHud");
	HX_MARK_MEMBER_NAME(enemyFlicker,"enemyFlicker");
	HX_MARK_MEMBER_NAME(npc,"npc");
	HX_MARK_MEMBER_NAME(npcType,"npcType");
	HX_MARK_MEMBER_NAME(minerDoor,"minerDoor");
	HX_MARK_MEMBER_NAME(homeDoor,"homeDoor");
	HX_MARK_MEMBER_NAME(shop,"shop");
	HX_MARK_MEMBER_NAME(airdrop,"airdrop");
	HX_MARK_MEMBER_NAME(map,"map");
	HX_MARK_MEMBER_NAME(through,"through");
	HX_MARK_MEMBER_NAME(walls,"walls");
	HX_MARK_MEMBER_NAME(road,"road");
	HX_MARK_MEMBER_NAME(ground,"ground");
	HX_MARK_MEMBER_NAME(sea,"sea");
	HX_MARK_MEMBER_NAME(house1,"house1");
	HX_MARK_MEMBER_NAME(house1Door,"house1Door");
	HX_MARK_MEMBER_NAME(house2,"house2");
	HX_MARK_MEMBER_NAME(house2Door,"house2Door");
	HX_MARK_MEMBER_NAME(house3,"house3");
	HX_MARK_MEMBER_NAME(house3Door,"house3Door");
	HX_MARK_MEMBER_NAME(house4,"house4");
	HX_MARK_MEMBER_NAME(house4Door,"house4Door");
	HX_MARK_MEMBER_NAME(houseDis,"houseDis");
	HX_MARK_MEMBER_NAME(p1Talk,"p1Talk");
	HX_MARK_MEMBER_NAME(p2Talk,"p2Talk");
	HX_MARK_MEMBER_NAME(p3Talk,"p3Talk");
	HX_MARK_MEMBER_NAME(ufo,"ufo");
	HX_MARK_MEMBER_NAME(save,"save");
	HX_MARK_MEMBER_NAME(firstLoan,"firstLoan");
	 ::flixel::FlxState_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void StreetState_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(player,"player");
	HX_VISIT_MEMBER_NAME(tip,"tip");
	HX_VISIT_MEMBER_NAME(bag,"bag");
	HX_VISIT_MEMBER_NAME(getDaMis,"getDaMis");
	HX_VISIT_MEMBER_NAME(cancel,"cancel");
	HX_VISIT_MEMBER_NAME(touchEnemy,"touchEnemy");
	HX_VISIT_MEMBER_NAME(openBag,"openBag");
	HX_VISIT_MEMBER_NAME(doorTele,"doorTele");
	HX_VISIT_MEMBER_NAME(saveNoise,"saveNoise");
	HX_VISIT_MEMBER_NAME(dia,"dia");
	HX_VISIT_MEMBER_NAME(diaUpDown,"diaUpDown");
	HX_VISIT_MEMBER_NAME(name,"name");
	HX_VISIT_MEMBER_NAME(txt,"txt");
	HX_VISIT_MEMBER_NAME(talkYes,"talkYes");
	HX_VISIT_MEMBER_NAME(enemy,"enemy");
	HX_VISIT_MEMBER_NAME(inCombat,"inCombat");
	HX_VISIT_MEMBER_NAME(combatHud,"combatHud");
	HX_VISIT_MEMBER_NAME(enemyFlicker,"enemyFlicker");
	HX_VISIT_MEMBER_NAME(npc,"npc");
	HX_VISIT_MEMBER_NAME(npcType,"npcType");
	HX_VISIT_MEMBER_NAME(minerDoor,"minerDoor");
	HX_VISIT_MEMBER_NAME(homeDoor,"homeDoor");
	HX_VISIT_MEMBER_NAME(shop,"shop");
	HX_VISIT_MEMBER_NAME(airdrop,"airdrop");
	HX_VISIT_MEMBER_NAME(map,"map");
	HX_VISIT_MEMBER_NAME(through,"through");
	HX_VISIT_MEMBER_NAME(walls,"walls");
	HX_VISIT_MEMBER_NAME(road,"road");
	HX_VISIT_MEMBER_NAME(ground,"ground");
	HX_VISIT_MEMBER_NAME(sea,"sea");
	HX_VISIT_MEMBER_NAME(house1,"house1");
	HX_VISIT_MEMBER_NAME(house1Door,"house1Door");
	HX_VISIT_MEMBER_NAME(house2,"house2");
	HX_VISIT_MEMBER_NAME(house2Door,"house2Door");
	HX_VISIT_MEMBER_NAME(house3,"house3");
	HX_VISIT_MEMBER_NAME(house3Door,"house3Door");
	HX_VISIT_MEMBER_NAME(house4,"house4");
	HX_VISIT_MEMBER_NAME(house4Door,"house4Door");
	HX_VISIT_MEMBER_NAME(houseDis,"houseDis");
	HX_VISIT_MEMBER_NAME(p1Talk,"p1Talk");
	HX_VISIT_MEMBER_NAME(p2Talk,"p2Talk");
	HX_VISIT_MEMBER_NAME(p3Talk,"p3Talk");
	HX_VISIT_MEMBER_NAME(ufo,"ufo");
	HX_VISIT_MEMBER_NAME(save,"save");
	HX_VISIT_MEMBER_NAME(firstLoan,"firstLoan");
	 ::flixel::FlxState_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val StreetState_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"tip") ) { return ::hx::Val( tip ); }
		if (HX_FIELD_EQ(inName,"bag") ) { return ::hx::Val( bag ); }
		if (HX_FIELD_EQ(inName,"dia") ) { return ::hx::Val( dia ); }
		if (HX_FIELD_EQ(inName,"txt") ) { return ::hx::Val( txt ); }
		if (HX_FIELD_EQ(inName,"npc") ) { return ::hx::Val( npc ); }
		if (HX_FIELD_EQ(inName,"map") ) { return ::hx::Val( map ); }
		if (HX_FIELD_EQ(inName,"sea") ) { return ::hx::Val( sea ); }
		if (HX_FIELD_EQ(inName,"ufo") ) { return ::hx::Val( ufo ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { return ::hx::Val( name ); }
		if (HX_FIELD_EQ(inName,"shop") ) { return ::hx::Val( shop ); }
		if (HX_FIELD_EQ(inName,"road") ) { return ::hx::Val( road ); }
		if (HX_FIELD_EQ(inName,"save") ) { return ::hx::Val( save ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"enemy") ) { return ::hx::Val( enemy ); }
		if (HX_FIELD_EQ(inName,"walls") ) { return ::hx::Val( walls ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"player") ) { return ::hx::Val( player ); }
		if (HX_FIELD_EQ(inName,"cancel") ) { return ::hx::Val( cancel ); }
		if (HX_FIELD_EQ(inName,"ground") ) { return ::hx::Val( ground ); }
		if (HX_FIELD_EQ(inName,"house1") ) { return ::hx::Val( house1 ); }
		if (HX_FIELD_EQ(inName,"house2") ) { return ::hx::Val( house2 ); }
		if (HX_FIELD_EQ(inName,"house3") ) { return ::hx::Val( house3 ); }
		if (HX_FIELD_EQ(inName,"house4") ) { return ::hx::Val( house4 ); }
		if (HX_FIELD_EQ(inName,"p1Talk") ) { return ::hx::Val( p1Talk ); }
		if (HX_FIELD_EQ(inName,"p2Talk") ) { return ::hx::Val( p2Talk ); }
		if (HX_FIELD_EQ(inName,"p3Talk") ) { return ::hx::Val( p3Talk ); }
		if (HX_FIELD_EQ(inName,"create") ) { return ::hx::Val( create_dyn() ); }
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
		if (HX_FIELD_EQ(inName,"goHome") ) { return ::hx::Val( goHome_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"openBag") ) { return ::hx::Val( openBag ); }
		if (HX_FIELD_EQ(inName,"talkYes") ) { return ::hx::Val( talkYes ); }
		if (HX_FIELD_EQ(inName,"npcType") ) { return ::hx::Val( npcType ); }
		if (HX_FIELD_EQ(inName,"airdrop") ) { return ::hx::Val( airdrop ); }
		if (HX_FIELD_EQ(inName,"through") ) { return ::hx::Val( through ); }
		if (HX_FIELD_EQ(inName,"npcTalk") ) { return ::hx::Val( npcTalk_dyn() ); }
		if (HX_FIELD_EQ(inName,"houseIn") ) { return ::hx::Val( houseIn_dyn() ); }
		if (HX_FIELD_EQ(inName,"updateC") ) { return ::hx::Val( updateC_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getDaMis") ) { return ::hx::Val( getDaMis ); }
		if (HX_FIELD_EQ(inName,"doorTele") ) { return ::hx::Val( doorTele ); }
		if (HX_FIELD_EQ(inName,"inCombat") ) { return ::hx::Val( inCombat ); }
		if (HX_FIELD_EQ(inName,"homeDoor") ) { return ::hx::Val( homeDoor ); }
		if (HX_FIELD_EQ(inName,"houseDis") ) { return ::hx::Val( houseDis ); }
		if (HX_FIELD_EQ(inName,"saveFile") ) { return ::hx::Val( saveFile_dyn() ); }
		if (HX_FIELD_EQ(inName,"loadFile") ) { return ::hx::Val( loadFile_dyn() ); }
		if (HX_FIELD_EQ(inName,"houseOut") ) { return ::hx::Val( houseOut_dyn() ); }
		if (HX_FIELD_EQ(inName,"shopOpen") ) { return ::hx::Val( shopOpen_dyn() ); }
		if (HX_FIELD_EQ(inName,"updateF4") ) { return ::hx::Val( updateF4_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"saveNoise") ) { return ::hx::Val( saveNoise ); }
		if (HX_FIELD_EQ(inName,"diaUpDown") ) { return ::hx::Val( diaUpDown ); }
		if (HX_FIELD_EQ(inName,"combatHud") ) { return ::hx::Val( combatHud ); }
		if (HX_FIELD_EQ(inName,"minerDoor") ) { return ::hx::Val( minerDoor ); }
		if (HX_FIELD_EQ(inName,"firstLoan") ) { return ::hx::Val( firstLoan ); }
		if (HX_FIELD_EQ(inName,"goToMiner") ) { return ::hx::Val( goToMiner_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"touchEnemy") ) { return ::hx::Val( touchEnemy ); }
		if (HX_FIELD_EQ(inName,"house1Door") ) { return ::hx::Val( house1Door ); }
		if (HX_FIELD_EQ(inName,"house2Door") ) { return ::hx::Val( house2Door ); }
		if (HX_FIELD_EQ(inName,"house3Door") ) { return ::hx::Val( house3Door ); }
		if (HX_FIELD_EQ(inName,"house4Door") ) { return ::hx::Val( house4Door ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"enemyFlicker") ) { return ::hx::Val( enemyFlicker ); }
		if (HX_FIELD_EQ(inName,"airdropMoney") ) { return ::hx::Val( airdropMoney_dyn() ); }
		if (HX_FIELD_EQ(inName,"playerUpDown") ) { return ::hx::Val( playerUpDown_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"placeEntities") ) { return ::hx::Val( placeEntities_dyn() ); }
		if (HX_FIELD_EQ(inName,"updateTalking") ) { return ::hx::Val( updateTalking_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"updateInCombat") ) { return ::hx::Val( updateInCombat_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"playerTouchEnemy") ) { return ::hx::Val( playerTouchEnemy_dyn() ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"updateWhenDiaInvisible") ) { return ::hx::Val( updateWhenDiaInvisible_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val StreetState_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"tip") ) { tip=inValue.Cast<  ::Tip >(); return inValue; }
		if (HX_FIELD_EQ(inName,"bag") ) { bag=inValue.Cast<  ::Bag >(); return inValue; }
		if (HX_FIELD_EQ(inName,"dia") ) { dia=inValue.Cast<  ::Dia >(); return inValue; }
		if (HX_FIELD_EQ(inName,"txt") ) { txt=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"npc") ) { npc=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		if (HX_FIELD_EQ(inName,"map") ) { map=inValue.Cast<  ::flixel::addons::editors::ogmo::FlxOgmo3Loader >(); return inValue; }
		if (HX_FIELD_EQ(inName,"sea") ) { sea=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ufo") ) { ufo=inValue.Cast<  ::flixel::text::FlxText >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { name=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"shop") ) { shop=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"road") ) { road=inValue.Cast<  ::flixel::tile::FlxTilemap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"save") ) { save=inValue.Cast<  ::flixel::util::FlxSave >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"enemy") ) { enemy=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		if (HX_FIELD_EQ(inName,"walls") ) { walls=inValue.Cast<  ::flixel::tile::FlxTilemap >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"player") ) { player=inValue.Cast<  ::Player >(); return inValue; }
		if (HX_FIELD_EQ(inName,"cancel") ) { cancel=inValue.Cast<  ::flixel::_hx_system::FlxSound >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ground") ) { ground=inValue.Cast<  ::flixel::tile::FlxTilemap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"house1") ) { house1=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"house2") ) { house2=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"house3") ) { house3=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"house4") ) { house4=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"p1Talk") ) { p1Talk=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"p2Talk") ) { p2Talk=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"p3Talk") ) { p3Talk=inValue.Cast< bool >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"openBag") ) { openBag=inValue.Cast<  ::flixel::_hx_system::FlxSound >(); return inValue; }
		if (HX_FIELD_EQ(inName,"talkYes") ) { talkYes=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"npcType") ) { npcType=inValue.Cast<  ::NpcType >(); return inValue; }
		if (HX_FIELD_EQ(inName,"airdrop") ) { airdrop=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"through") ) { through=inValue.Cast<  ::flixel::tile::FlxTilemap >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getDaMis") ) { getDaMis=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"doorTele") ) { doorTele=inValue.Cast<  ::flixel::_hx_system::FlxSound >(); return inValue; }
		if (HX_FIELD_EQ(inName,"inCombat") ) { inCombat=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"homeDoor") ) { homeDoor=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"houseDis") ) { houseDis=inValue.Cast< int >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"saveNoise") ) { saveNoise=inValue.Cast<  ::flixel::_hx_system::FlxSound >(); return inValue; }
		if (HX_FIELD_EQ(inName,"diaUpDown") ) { diaUpDown=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"combatHud") ) { combatHud=inValue.Cast<  ::CombatHUD >(); return inValue; }
		if (HX_FIELD_EQ(inName,"minerDoor") ) { minerDoor=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"firstLoan") ) { firstLoan=inValue.Cast< bool >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"touchEnemy") ) { touchEnemy=inValue.Cast<  ::flixel::_hx_system::FlxSound >(); return inValue; }
		if (HX_FIELD_EQ(inName,"house1Door") ) { house1Door=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"house2Door") ) { house2Door=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"house3Door") ) { house3Door=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"house4Door") ) { house4Door=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"enemyFlicker") ) { enemyFlicker=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void StreetState_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("player",61,eb,b8,37));
	outFields->push(HX_("tip",5b,61,58,00));
	outFields->push(HX_("bag",c8,b1,4a,00));
	outFields->push(HX_("getDaMis",a4,8d,41,34));
	outFields->push(HX_("cancel",7a,ed,33,b8));
	outFields->push(HX_("touchEnemy",09,f6,0b,6a));
	outFields->push(HX_("openBag",1e,60,27,40));
	outFields->push(HX_("doorTele",b8,2e,a1,9c));
	outFields->push(HX_("saveNoise",1d,97,6f,2e));
	outFields->push(HX_("dia",3c,3d,4c,00));
	outFields->push(HX_("diaUpDown",b9,9a,1d,44));
	outFields->push(HX_("name",4b,72,ff,48));
	outFields->push(HX_("txt",70,6e,58,00));
	outFields->push(HX_("talkYes",5b,2b,9c,16));
	outFields->push(HX_("enemy",48,12,7b,70));
	outFields->push(HX_("inCombat",f9,59,a4,4f));
	outFields->push(HX_("combatHud",e3,10,9a,6a));
	outFields->push(HX_("enemyFlicker",90,49,59,4b));
	outFields->push(HX_("npc",e1,d9,53,00));
	outFields->push(HX_("npcType",3b,fd,be,de));
	outFields->push(HX_("minerDoor",8d,3b,b4,57));
	outFields->push(HX_("homeDoor",2d,e3,f2,2d));
	outFields->push(HX_("shop",f6,d4,52,4c));
	outFields->push(HX_("airdrop",b9,3b,39,a3));
	outFields->push(HX_("map",9c,0a,53,00));
	outFields->push(HX_("through",45,48,3d,5a));
	outFields->push(HX_("walls",29,0c,1f,c5));
	outFields->push(HX_("road",e0,e1,ae,4b));
	outFields->push(HX_("ground",87,22,28,1c));
	outFields->push(HX_("sea",8f,9b,57,00));
	outFields->push(HX_("house1",91,7c,45,cc));
	outFields->push(HX_("house1Door",9f,b6,14,2d));
	outFields->push(HX_("house2",92,7c,45,cc));
	outFields->push(HX_("house2Door",20,4b,7b,c0));
	outFields->push(HX_("house3",93,7c,45,cc));
	outFields->push(HX_("house3Door",a1,df,e1,53));
	outFields->push(HX_("house4",94,7c,45,cc));
	outFields->push(HX_("house4Door",22,74,48,e7));
	outFields->push(HX_("houseDis",8e,49,19,86));
	outFields->push(HX_("p1Talk",8d,bb,6a,36));
	outFields->push(HX_("p2Talk",0e,50,d1,c9));
	outFields->push(HX_("p3Talk",8f,e4,37,5d));
	outFields->push(HX_("ufo",fe,20,59,00));
	outFields->push(HX_("save",3d,8b,4d,4c));
	outFields->push(HX_("firstLoan",80,16,86,fe));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo StreetState_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::Player */ ,(int)offsetof(StreetState_obj,player),HX_("player",61,eb,b8,37)},
	{::hx::fsObject /*  ::Tip */ ,(int)offsetof(StreetState_obj,tip),HX_("tip",5b,61,58,00)},
	{::hx::fsObject /*  ::Bag */ ,(int)offsetof(StreetState_obj,bag),HX_("bag",c8,b1,4a,00)},
	{::hx::fsBool,(int)offsetof(StreetState_obj,getDaMis),HX_("getDaMis",a4,8d,41,34)},
	{::hx::fsObject /*  ::flixel::_hx_system::FlxSound */ ,(int)offsetof(StreetState_obj,cancel),HX_("cancel",7a,ed,33,b8)},
	{::hx::fsObject /*  ::flixel::_hx_system::FlxSound */ ,(int)offsetof(StreetState_obj,touchEnemy),HX_("touchEnemy",09,f6,0b,6a)},
	{::hx::fsObject /*  ::flixel::_hx_system::FlxSound */ ,(int)offsetof(StreetState_obj,openBag),HX_("openBag",1e,60,27,40)},
	{::hx::fsObject /*  ::flixel::_hx_system::FlxSound */ ,(int)offsetof(StreetState_obj,doorTele),HX_("doorTele",b8,2e,a1,9c)},
	{::hx::fsObject /*  ::flixel::_hx_system::FlxSound */ ,(int)offsetof(StreetState_obj,saveNoise),HX_("saveNoise",1d,97,6f,2e)},
	{::hx::fsObject /*  ::Dia */ ,(int)offsetof(StreetState_obj,dia),HX_("dia",3c,3d,4c,00)},
	{::hx::fsString,(int)offsetof(StreetState_obj,diaUpDown),HX_("diaUpDown",b9,9a,1d,44)},
	{::hx::fsString,(int)offsetof(StreetState_obj,name),HX_("name",4b,72,ff,48)},
	{::hx::fsBool,(int)offsetof(StreetState_obj,txt),HX_("txt",70,6e,58,00)},
	{::hx::fsBool,(int)offsetof(StreetState_obj,talkYes),HX_("talkYes",5b,2b,9c,16)},
	{::hx::fsObject /*  ::flixel::group::FlxTypedGroup */ ,(int)offsetof(StreetState_obj,enemy),HX_("enemy",48,12,7b,70)},
	{::hx::fsBool,(int)offsetof(StreetState_obj,inCombat),HX_("inCombat",f9,59,a4,4f)},
	{::hx::fsObject /*  ::CombatHUD */ ,(int)offsetof(StreetState_obj,combatHud),HX_("combatHud",e3,10,9a,6a)},
	{::hx::fsBool,(int)offsetof(StreetState_obj,enemyFlicker),HX_("enemyFlicker",90,49,59,4b)},
	{::hx::fsObject /*  ::flixel::group::FlxTypedGroup */ ,(int)offsetof(StreetState_obj,npc),HX_("npc",e1,d9,53,00)},
	{::hx::fsObject /*  ::NpcType */ ,(int)offsetof(StreetState_obj,npcType),HX_("npcType",3b,fd,be,de)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(StreetState_obj,minerDoor),HX_("minerDoor",8d,3b,b4,57)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(StreetState_obj,homeDoor),HX_("homeDoor",2d,e3,f2,2d)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(StreetState_obj,shop),HX_("shop",f6,d4,52,4c)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(StreetState_obj,airdrop),HX_("airdrop",b9,3b,39,a3)},
	{::hx::fsObject /*  ::flixel::addons::editors::ogmo::FlxOgmo3Loader */ ,(int)offsetof(StreetState_obj,map),HX_("map",9c,0a,53,00)},
	{::hx::fsObject /*  ::flixel::tile::FlxTilemap */ ,(int)offsetof(StreetState_obj,through),HX_("through",45,48,3d,5a)},
	{::hx::fsObject /*  ::flixel::tile::FlxTilemap */ ,(int)offsetof(StreetState_obj,walls),HX_("walls",29,0c,1f,c5)},
	{::hx::fsObject /*  ::flixel::tile::FlxTilemap */ ,(int)offsetof(StreetState_obj,road),HX_("road",e0,e1,ae,4b)},
	{::hx::fsObject /*  ::flixel::tile::FlxTilemap */ ,(int)offsetof(StreetState_obj,ground),HX_("ground",87,22,28,1c)},
	{::hx::fsObject /*  ::flixel::group::FlxTypedGroup */ ,(int)offsetof(StreetState_obj,sea),HX_("sea",8f,9b,57,00)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(StreetState_obj,house1),HX_("house1",91,7c,45,cc)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(StreetState_obj,house1Door),HX_("house1Door",9f,b6,14,2d)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(StreetState_obj,house2),HX_("house2",92,7c,45,cc)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(StreetState_obj,house2Door),HX_("house2Door",20,4b,7b,c0)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(StreetState_obj,house3),HX_("house3",93,7c,45,cc)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(StreetState_obj,house3Door),HX_("house3Door",a1,df,e1,53)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(StreetState_obj,house4),HX_("house4",94,7c,45,cc)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(StreetState_obj,house4Door),HX_("house4Door",22,74,48,e7)},
	{::hx::fsInt,(int)offsetof(StreetState_obj,houseDis),HX_("houseDis",8e,49,19,86)},
	{::hx::fsBool,(int)offsetof(StreetState_obj,p1Talk),HX_("p1Talk",8d,bb,6a,36)},
	{::hx::fsBool,(int)offsetof(StreetState_obj,p2Talk),HX_("p2Talk",0e,50,d1,c9)},
	{::hx::fsBool,(int)offsetof(StreetState_obj,p3Talk),HX_("p3Talk",8f,e4,37,5d)},
	{::hx::fsObject /*  ::flixel::text::FlxText */ ,(int)offsetof(StreetState_obj,ufo),HX_("ufo",fe,20,59,00)},
	{::hx::fsObject /*  ::flixel::util::FlxSave */ ,(int)offsetof(StreetState_obj,save),HX_("save",3d,8b,4d,4c)},
	{::hx::fsBool,(int)offsetof(StreetState_obj,firstLoan),HX_("firstLoan",80,16,86,fe)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *StreetState_obj_sStaticStorageInfo = 0;
#endif

static ::String StreetState_obj_sMemberFields[] = {
	HX_("player",61,eb,b8,37),
	HX_("tip",5b,61,58,00),
	HX_("bag",c8,b1,4a,00),
	HX_("getDaMis",a4,8d,41,34),
	HX_("cancel",7a,ed,33,b8),
	HX_("touchEnemy",09,f6,0b,6a),
	HX_("openBag",1e,60,27,40),
	HX_("doorTele",b8,2e,a1,9c),
	HX_("saveNoise",1d,97,6f,2e),
	HX_("dia",3c,3d,4c,00),
	HX_("diaUpDown",b9,9a,1d,44),
	HX_("name",4b,72,ff,48),
	HX_("txt",70,6e,58,00),
	HX_("talkYes",5b,2b,9c,16),
	HX_("enemy",48,12,7b,70),
	HX_("inCombat",f9,59,a4,4f),
	HX_("combatHud",e3,10,9a,6a),
	HX_("enemyFlicker",90,49,59,4b),
	HX_("npc",e1,d9,53,00),
	HX_("npcType",3b,fd,be,de),
	HX_("minerDoor",8d,3b,b4,57),
	HX_("homeDoor",2d,e3,f2,2d),
	HX_("shop",f6,d4,52,4c),
	HX_("airdrop",b9,3b,39,a3),
	HX_("map",9c,0a,53,00),
	HX_("through",45,48,3d,5a),
	HX_("walls",29,0c,1f,c5),
	HX_("road",e0,e1,ae,4b),
	HX_("ground",87,22,28,1c),
	HX_("sea",8f,9b,57,00),
	HX_("house1",91,7c,45,cc),
	HX_("house1Door",9f,b6,14,2d),
	HX_("house2",92,7c,45,cc),
	HX_("house2Door",20,4b,7b,c0),
	HX_("house3",93,7c,45,cc),
	HX_("house3Door",a1,df,e1,53),
	HX_("house4",94,7c,45,cc),
	HX_("house4Door",22,74,48,e7),
	HX_("houseDis",8e,49,19,86),
	HX_("p1Talk",8d,bb,6a,36),
	HX_("p2Talk",0e,50,d1,c9),
	HX_("p3Talk",8f,e4,37,5d),
	HX_("ufo",fe,20,59,00),
	HX_("save",3d,8b,4d,4c),
	HX_("firstLoan",80,16,86,fe),
	HX_("create",fc,66,0f,7c),
	HX_("placeEntities",28,e6,91,17),
	HX_("saveFile",59,68,75,f7),
	HX_("loadFile",c2,9f,5b,b4),
	HX_("update",09,86,05,87),
	HX_("npcTalk",ad,c3,ac,de),
	HX_("goToMiner",bc,a1,3e,4e),
	HX_("goHome",67,84,28,48),
	HX_("houseIn",a5,97,87,f0),
	HX_("houseOut",ce,ac,21,86),
	HX_("playerTouchEnemy",ca,48,30,6f),
	HX_("updateInCombat",22,4d,ce,84),
	HX_("airdropMoney",c7,cf,03,b4),
	HX_("shopOpen",e0,b7,6c,a9),
	HX_("updateTalking",2d,bc,16,e2),
	HX_("updateWhenDiaInvisible",54,94,25,66),
	HX_("playerUpDown",9e,f2,da,6d),
	HX_("updateF4",77,17,fa,77),
	HX_("updateC",1a,c2,cf,9d),
	::String(null()) };

::hx::Class StreetState_obj::__mClass;

void StreetState_obj::__register()
{
	StreetState_obj _hx_dummy;
	StreetState_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("StreetState",ee,7a,d9,4a);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(StreetState_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< StreetState_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StreetState_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StreetState_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

