// Generated by Haxe 4.2.1+bf9ff69
#include <hxcpp.h>

#ifndef INCLUDED_NpcType
#include <NpcType.h>
#endif

::NpcType NpcType_obj::dexNews;

::NpcType NpcType_obj::doge;

::NpcType NpcType_obj::house1Sign;

::NpcType NpcType_obj::house2Sign;

::NpcType NpcType_obj::house3Sign;

::NpcType NpcType_obj::house4Sign;

::NpcType NpcType_obj::lake;

::NpcType NpcType_obj::mathChart;

::NpcType NpcType_obj::minerSign;

::NpcType NpcType_obj::ming;

::NpcType NpcType_obj::monument;

::NpcType NpcType_obj::p1;

::NpcType NpcType_obj::p1ApToCoMach;

::NpcType NpcType_obj::p1BaToCoMach;

::NpcType NpcType_obj::p1CoToApMach;

::NpcType NpcType_obj::p1CoToDeMach;

::NpcType NpcType_obj::p1DeToCoMach;

::NpcType NpcType_obj::p2;

::NpcType NpcType_obj::p2Mach;

::NpcType NpcType_obj::p3;

::NpcType NpcType_obj::p3Mach;

::NpcType NpcType_obj::saveStone;

::NpcType NpcType_obj::sbBlack;

::NpcType NpcType_obj::sbBlue;

::NpcType NpcType_obj::sbGreen;

::NpcType NpcType_obj::sbRed;

::NpcType NpcType_obj::signApple;

::NpcType NpcType_obj::signDefi;

::NpcType NpcType_obj::spartan;

bool NpcType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("dexNews",8a,21,5f,ec)) { outValue = NpcType_obj::dexNews; return true; }
	if (inName==HX_("doge",69,ea,6d,42)) { outValue = NpcType_obj::doge; return true; }
	if (inName==HX_("house1Sign",6e,55,fa,36)) { outValue = NpcType_obj::house1Sign; return true; }
	if (inName==HX_("house2Sign",ef,e9,60,ca)) { outValue = NpcType_obj::house2Sign; return true; }
	if (inName==HX_("house3Sign",70,7e,c7,5d)) { outValue = NpcType_obj::house3Sign; return true; }
	if (inName==HX_("house4Sign",f1,12,2e,f1)) { outValue = NpcType_obj::house4Sign; return true; }
	if (inName==HX_("lake",4f,03,ad,47)) { outValue = NpcType_obj::lake; return true; }
	if (inName==HX_("mathChart",f6,55,9f,c2)) { outValue = NpcType_obj::mathChart; return true; }
	if (inName==HX_("minerSign",5c,da,99,61)) { outValue = NpcType_obj::minerSign; return true; }
	if (inName==HX_("ming",95,4e,5c,48)) { outValue = NpcType_obj::ming; return true; }
	if (inName==HX_("monument",47,ea,c5,03)) { outValue = NpcType_obj::monument; return true; }
	if (inName==HX_("p1",c1,61,00,00)) { outValue = NpcType_obj::p1; return true; }
	if (inName==HX_("p1ApToCoMach",d0,bc,c7,3d)) { outValue = NpcType_obj::p1ApToCoMach; return true; }
	if (inName==HX_("p1BaToCoMach",a0,0d,ed,a1)) { outValue = NpcType_obj::p1BaToCoMach; return true; }
	if (inName==HX_("p1CoToApMach",50,1f,1b,b2)) { outValue = NpcType_obj::p1CoToApMach; return true; }
	if (inName==HX_("p1CoToDeMach",e2,d2,c4,8f)) { outValue = NpcType_obj::p1CoToDeMach; return true; }
	if (inName==HX_("p1DeToCoMach",62,a1,47,6e)) { outValue = NpcType_obj::p1DeToCoMach; return true; }
	if (inName==HX_("p2",c2,61,00,00)) { outValue = NpcType_obj::p2; return true; }
	if (inName==HX_("p2Mach",db,c9,30,c5)) { outValue = NpcType_obj::p2Mach; return true; }
	if (inName==HX_("p3",c3,61,00,00)) { outValue = NpcType_obj::p3; return true; }
	if (inName==HX_("p3Mach",5c,5e,97,58)) { outValue = NpcType_obj::p3Mach; return true; }
	if (inName==HX_("saveStone",e8,17,c3,12)) { outValue = NpcType_obj::saveStone; return true; }
	if (inName==HX_("sbBlack",b0,fa,3c,25)) { outValue = NpcType_obj::sbBlack; return true; }
	if (inName==HX_("sbBlue",c9,c6,41,94)) { outValue = NpcType_obj::sbBlue; return true; }
	if (inName==HX_("sbGreen",b4,33,38,0a)) { outValue = NpcType_obj::sbGreen; return true; }
	if (inName==HX_("sbRed",02,30,1a,78)) { outValue = NpcType_obj::sbRed; return true; }
	if (inName==HX_("signApple",dd,67,f0,a5)) { outValue = NpcType_obj::signApple; return true; }
	if (inName==HX_("signDefi",e1,71,0c,72)) { outValue = NpcType_obj::signDefi; return true; }
	if (inName==HX_("spartan",53,b4,ad,9b)) { outValue = NpcType_obj::spartan; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(NpcType_obj)

int NpcType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("dexNews",8a,21,5f,ec)) return 27;
	if (inName==HX_("doge",69,ea,6d,42)) return 0;
	if (inName==HX_("house1Sign",6e,55,fa,36)) return 13;
	if (inName==HX_("house2Sign",ef,e9,60,ca)) return 21;
	if (inName==HX_("house3Sign",70,7e,c7,5d)) return 24;
	if (inName==HX_("house4Sign",f1,12,2e,f1)) return 28;
	if (inName==HX_("lake",4f,03,ad,47)) return 7;
	if (inName==HX_("mathChart",f6,55,9f,c2)) return 15;
	if (inName==HX_("minerSign",5c,da,99,61)) return 10;
	if (inName==HX_("ming",95,4e,5c,48)) return 1;
	if (inName==HX_("monument",47,ea,c5,03)) return 6;
	if (inName==HX_("p1",c1,61,00,00)) return 14;
	if (inName==HX_("p1ApToCoMach",d0,bc,c7,3d)) return 18;
	if (inName==HX_("p1BaToCoMach",a0,0d,ed,a1)) return 16;
	if (inName==HX_("p1CoToApMach",50,1f,1b,b2)) return 17;
	if (inName==HX_("p1CoToDeMach",e2,d2,c4,8f)) return 19;
	if (inName==HX_("p1DeToCoMach",62,a1,47,6e)) return 20;
	if (inName==HX_("p2",c2,61,00,00)) return 22;
	if (inName==HX_("p2Mach",db,c9,30,c5)) return 23;
	if (inName==HX_("p3",c3,61,00,00)) return 25;
	if (inName==HX_("p3Mach",5c,5e,97,58)) return 26;
	if (inName==HX_("saveStone",e8,17,c3,12)) return 8;
	if (inName==HX_("sbBlack",b0,fa,3c,25)) return 5;
	if (inName==HX_("sbBlue",c9,c6,41,94)) return 3;
	if (inName==HX_("sbGreen",b4,33,38,0a)) return 4;
	if (inName==HX_("sbRed",02,30,1a,78)) return 2;
	if (inName==HX_("signApple",dd,67,f0,a5)) return 12;
	if (inName==HX_("signDefi",e1,71,0c,72)) return 11;
	if (inName==HX_("spartan",53,b4,ad,9b)) return 9;
	return super::__FindIndex(inName);
}

int NpcType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("dexNews",8a,21,5f,ec)) return 0;
	if (inName==HX_("doge",69,ea,6d,42)) return 0;
	if (inName==HX_("house1Sign",6e,55,fa,36)) return 0;
	if (inName==HX_("house2Sign",ef,e9,60,ca)) return 0;
	if (inName==HX_("house3Sign",70,7e,c7,5d)) return 0;
	if (inName==HX_("house4Sign",f1,12,2e,f1)) return 0;
	if (inName==HX_("lake",4f,03,ad,47)) return 0;
	if (inName==HX_("mathChart",f6,55,9f,c2)) return 0;
	if (inName==HX_("minerSign",5c,da,99,61)) return 0;
	if (inName==HX_("ming",95,4e,5c,48)) return 0;
	if (inName==HX_("monument",47,ea,c5,03)) return 0;
	if (inName==HX_("p1",c1,61,00,00)) return 0;
	if (inName==HX_("p1ApToCoMach",d0,bc,c7,3d)) return 0;
	if (inName==HX_("p1BaToCoMach",a0,0d,ed,a1)) return 0;
	if (inName==HX_("p1CoToApMach",50,1f,1b,b2)) return 0;
	if (inName==HX_("p1CoToDeMach",e2,d2,c4,8f)) return 0;
	if (inName==HX_("p1DeToCoMach",62,a1,47,6e)) return 0;
	if (inName==HX_("p2",c2,61,00,00)) return 0;
	if (inName==HX_("p2Mach",db,c9,30,c5)) return 0;
	if (inName==HX_("p3",c3,61,00,00)) return 0;
	if (inName==HX_("p3Mach",5c,5e,97,58)) return 0;
	if (inName==HX_("saveStone",e8,17,c3,12)) return 0;
	if (inName==HX_("sbBlack",b0,fa,3c,25)) return 0;
	if (inName==HX_("sbBlue",c9,c6,41,94)) return 0;
	if (inName==HX_("sbGreen",b4,33,38,0a)) return 0;
	if (inName==HX_("sbRed",02,30,1a,78)) return 0;
	if (inName==HX_("signApple",dd,67,f0,a5)) return 0;
	if (inName==HX_("signDefi",e1,71,0c,72)) return 0;
	if (inName==HX_("spartan",53,b4,ad,9b)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val NpcType_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("dexNews",8a,21,5f,ec)) return dexNews;
	if (inName==HX_("doge",69,ea,6d,42)) return doge;
	if (inName==HX_("house1Sign",6e,55,fa,36)) return house1Sign;
	if (inName==HX_("house2Sign",ef,e9,60,ca)) return house2Sign;
	if (inName==HX_("house3Sign",70,7e,c7,5d)) return house3Sign;
	if (inName==HX_("house4Sign",f1,12,2e,f1)) return house4Sign;
	if (inName==HX_("lake",4f,03,ad,47)) return lake;
	if (inName==HX_("mathChart",f6,55,9f,c2)) return mathChart;
	if (inName==HX_("minerSign",5c,da,99,61)) return minerSign;
	if (inName==HX_("ming",95,4e,5c,48)) return ming;
	if (inName==HX_("monument",47,ea,c5,03)) return monument;
	if (inName==HX_("p1",c1,61,00,00)) return p1;
	if (inName==HX_("p1ApToCoMach",d0,bc,c7,3d)) return p1ApToCoMach;
	if (inName==HX_("p1BaToCoMach",a0,0d,ed,a1)) return p1BaToCoMach;
	if (inName==HX_("p1CoToApMach",50,1f,1b,b2)) return p1CoToApMach;
	if (inName==HX_("p1CoToDeMach",e2,d2,c4,8f)) return p1CoToDeMach;
	if (inName==HX_("p1DeToCoMach",62,a1,47,6e)) return p1DeToCoMach;
	if (inName==HX_("p2",c2,61,00,00)) return p2;
	if (inName==HX_("p2Mach",db,c9,30,c5)) return p2Mach;
	if (inName==HX_("p3",c3,61,00,00)) return p3;
	if (inName==HX_("p3Mach",5c,5e,97,58)) return p3Mach;
	if (inName==HX_("saveStone",e8,17,c3,12)) return saveStone;
	if (inName==HX_("sbBlack",b0,fa,3c,25)) return sbBlack;
	if (inName==HX_("sbBlue",c9,c6,41,94)) return sbBlue;
	if (inName==HX_("sbGreen",b4,33,38,0a)) return sbGreen;
	if (inName==HX_("sbRed",02,30,1a,78)) return sbRed;
	if (inName==HX_("signApple",dd,67,f0,a5)) return signApple;
	if (inName==HX_("signDefi",e1,71,0c,72)) return signDefi;
	if (inName==HX_("spartan",53,b4,ad,9b)) return spartan;
	return super::__Field(inName,inCallProp);
}

static ::String NpcType_obj_sStaticFields[] = {
	HX_("doge",69,ea,6d,42),
	HX_("ming",95,4e,5c,48),
	HX_("sbRed",02,30,1a,78),
	HX_("sbBlue",c9,c6,41,94),
	HX_("sbGreen",b4,33,38,0a),
	HX_("sbBlack",b0,fa,3c,25),
	HX_("monument",47,ea,c5,03),
	HX_("lake",4f,03,ad,47),
	HX_("saveStone",e8,17,c3,12),
	HX_("spartan",53,b4,ad,9b),
	HX_("minerSign",5c,da,99,61),
	HX_("signDefi",e1,71,0c,72),
	HX_("signApple",dd,67,f0,a5),
	HX_("house1Sign",6e,55,fa,36),
	HX_("p1",c1,61,00,00),
	HX_("mathChart",f6,55,9f,c2),
	HX_("p1BaToCoMach",a0,0d,ed,a1),
	HX_("p1CoToApMach",50,1f,1b,b2),
	HX_("p1ApToCoMach",d0,bc,c7,3d),
	HX_("p1CoToDeMach",e2,d2,c4,8f),
	HX_("p1DeToCoMach",62,a1,47,6e),
	HX_("house2Sign",ef,e9,60,ca),
	HX_("p2",c2,61,00,00),
	HX_("p2Mach",db,c9,30,c5),
	HX_("house3Sign",70,7e,c7,5d),
	HX_("p3",c3,61,00,00),
	HX_("p3Mach",5c,5e,97,58),
	HX_("dexNews",8a,21,5f,ec),
	HX_("house4Sign",f1,12,2e,f1),
	::String(null())
};

::hx::Class NpcType_obj::__mClass;

Dynamic __Create_NpcType_obj() { return new NpcType_obj; }

void NpcType_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("NpcType",1b,25,10,ac), ::hx::TCanCast< NpcType_obj >,NpcType_obj_sStaticFields,0,
	&__Create_NpcType_obj, &__Create,
	&super::__SGetClass(), &CreateNpcType_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &NpcType_obj::__GetStatic;
}

void NpcType_obj::__boot()
{
dexNews = ::hx::CreateConstEnum< NpcType_obj >(HX_("dexNews",8a,21,5f,ec),27);
doge = ::hx::CreateConstEnum< NpcType_obj >(HX_("doge",69,ea,6d,42),0);
house1Sign = ::hx::CreateConstEnum< NpcType_obj >(HX_("house1Sign",6e,55,fa,36),13);
house2Sign = ::hx::CreateConstEnum< NpcType_obj >(HX_("house2Sign",ef,e9,60,ca),21);
house3Sign = ::hx::CreateConstEnum< NpcType_obj >(HX_("house3Sign",70,7e,c7,5d),24);
house4Sign = ::hx::CreateConstEnum< NpcType_obj >(HX_("house4Sign",f1,12,2e,f1),28);
lake = ::hx::CreateConstEnum< NpcType_obj >(HX_("lake",4f,03,ad,47),7);
mathChart = ::hx::CreateConstEnum< NpcType_obj >(HX_("mathChart",f6,55,9f,c2),15);
minerSign = ::hx::CreateConstEnum< NpcType_obj >(HX_("minerSign",5c,da,99,61),10);
ming = ::hx::CreateConstEnum< NpcType_obj >(HX_("ming",95,4e,5c,48),1);
monument = ::hx::CreateConstEnum< NpcType_obj >(HX_("monument",47,ea,c5,03),6);
p1 = ::hx::CreateConstEnum< NpcType_obj >(HX_("p1",c1,61,00,00),14);
p1ApToCoMach = ::hx::CreateConstEnum< NpcType_obj >(HX_("p1ApToCoMach",d0,bc,c7,3d),18);
p1BaToCoMach = ::hx::CreateConstEnum< NpcType_obj >(HX_("p1BaToCoMach",a0,0d,ed,a1),16);
p1CoToApMach = ::hx::CreateConstEnum< NpcType_obj >(HX_("p1CoToApMach",50,1f,1b,b2),17);
p1CoToDeMach = ::hx::CreateConstEnum< NpcType_obj >(HX_("p1CoToDeMach",e2,d2,c4,8f),19);
p1DeToCoMach = ::hx::CreateConstEnum< NpcType_obj >(HX_("p1DeToCoMach",62,a1,47,6e),20);
p2 = ::hx::CreateConstEnum< NpcType_obj >(HX_("p2",c2,61,00,00),22);
p2Mach = ::hx::CreateConstEnum< NpcType_obj >(HX_("p2Mach",db,c9,30,c5),23);
p3 = ::hx::CreateConstEnum< NpcType_obj >(HX_("p3",c3,61,00,00),25);
p3Mach = ::hx::CreateConstEnum< NpcType_obj >(HX_("p3Mach",5c,5e,97,58),26);
saveStone = ::hx::CreateConstEnum< NpcType_obj >(HX_("saveStone",e8,17,c3,12),8);
sbBlack = ::hx::CreateConstEnum< NpcType_obj >(HX_("sbBlack",b0,fa,3c,25),5);
sbBlue = ::hx::CreateConstEnum< NpcType_obj >(HX_("sbBlue",c9,c6,41,94),3);
sbGreen = ::hx::CreateConstEnum< NpcType_obj >(HX_("sbGreen",b4,33,38,0a),4);
sbRed = ::hx::CreateConstEnum< NpcType_obj >(HX_("sbRed",02,30,1a,78),2);
signApple = ::hx::CreateConstEnum< NpcType_obj >(HX_("signApple",dd,67,f0,a5),12);
signDefi = ::hx::CreateConstEnum< NpcType_obj >(HX_("signDefi",e1,71,0c,72),11);
spartan = ::hx::CreateConstEnum< NpcType_obj >(HX_("spartan",53,b4,ad,9b),9);
}


